"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9005],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>m,MDXProvider:()=>s,mdx:()=>N,useMDXComponents:()=>i,withMDXComponents:()=>u});var l=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(){return r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var l in t)Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l])}return e},r.apply(this,arguments)}function d(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?d(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):d(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,l,a=function(e,n){if(null==e)return{};var t,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)t=r[l],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)t=r[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var m=l.createContext({}),u=function(e){return function(n){var t=i(n.components);return l.createElement(e,r({},n,{components:t}))}},i=function(e){var n=l.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=i(e.components);return l.createElement(m.Provider,{value:n},e.children)},c="mdxType",x={inlineCode:"code",wrapper:function(e){var n=e.children;return l.createElement(l.Fragment,{},n)}},y=l.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,d=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),u=i(t),s=a,c=u["".concat(d,".").concat(s)]||u[s]||x[s]||r;return t?l.createElement(c,o(o({ref:n},m),{},{components:t})):l.createElement(c,o({ref:n},m))}));function N(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,d=new Array(r);d[0]=y;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[c]="string"==typeof e?e:a,d[1]=o;for(var m=2;m<r;m++)d[m]=t[m];return l.createElement.apply(null,d)}return l.createElement.apply(null,t)}y.displayName="MDXCreateElement"},65694:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>d,default:()=>i,frontMatter:()=>r,metadata:()=>o,toc:()=>m});var l=t(87462),a=(t(67294),t(3905));const r={},d="ctx.actions",o={unversionedId:"generated/native/ctx.actions",id:"generated/native/ctx.actions",title:"ctx.actions",description:"Members",source:"@site/../docs/generated/native/ctx.actions.md",sourceDirName:"generated/native",slug:"/generated/native/ctx.actions",permalink:"/docs/generated/native/ctx.actions",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"manualSidebar",previous:{title:"cmd_args",permalink:"/docs/generated/native/cmd_args"},next:{title:"ctx",permalink:"/docs/generated/native/ctx"}},p={},m=[{value:"Members",id:"members",level:3},{value:"anon_target",id:"anon_target",level:2},{value:"anon_targets",id:"anon_targets",level:2},{value:"artifact_tag",id:"artifact_tag",level:2},{value:"cas_artifact",id:"cas_artifact",level:2},{value:"copied_dir",id:"copied_dir",level:2},{value:"copy_dir",id:"copy_dir",level:2},{value:"copy_file",id:"copy_file",level:2},{value:"declare_output",id:"declare_output",level:2},{value:"download_file",id:"download_file",level:2},{value:"dynamic_output",id:"dynamic_output",level:2},{value:"run",id:"run",level:2},{value:"symlink_dir",id:"symlink_dir",level:2},{value:"symlink_file",id:"symlink_file",level:2},{value:"symlinked_dir",id:"symlinked_dir",level:2},{value:"tset",id:"tset",level:2},{value:"write",id:"write",level:2},{value:"write_json",id:"write_json",level:2}],u={toc:m};function i(e){let{components:n,...t}=e;return(0,a.mdx)("wrapper",(0,l.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"ctxactions"},"ctx.actions"),(0,a.mdx)("h3",{id:"members"},"Members"),(0,a.mdx)("table",{class:"starlark_table starlark_members_table"},(0,a.mdx)("thead",null,(0,a.mdx)("tr",null,(0,a.mdx)("th",null,"Member"),(0,a.mdx)("th",null,"Description"),(0,a.mdx)("th",null,"Type"))),(0,a.mdx)("tbody",null,(0,a.mdx)("tr",null,(0,a.mdx)("td",null,(0,a.mdx)("p",null,"anon_target")),(0,a.mdx)("td",null,(0,a.mdx)("p",null,"Generate an anonymous target")),(0,a.mdx)("td",null,(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'(\n    rule: "rule",\n  attrs: {str.type: ""}\n) -> "promise"\n')))),(0,a.mdx)("tr",null,(0,a.mdx)("td",null,(0,a.mdx)("p",null,"anon_targets")),(0,a.mdx)("td",null,(0,a.mdx)("p",null,"Generate a series of anonymous targets")),(0,a.mdx)("td",null,(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'(\n    rules: [("rule", {str.type: ""})]\n) -> "promise"\n')))),(0,a.mdx)("tr",null,(0,a.mdx)("td",null,(0,a.mdx)("p",null,"artifact_tag")),(0,a.mdx)("td",null,(0,a.mdx)("p",null,"Allocate a new input tag")),(0,a.mdx)("td",null,(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'() -> ""\n')))),(0,a.mdx)("tr",null,(0,a.mdx)("td",null,(0,a.mdx)("p",null,"cas_artifact")),(0,a.mdx)("td",null),(0,a.mdx)("td",null,(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'(\n    output: "",\n  digest: str.type,\n  use_case: str.type,\n  *,\n  expires_after_timestamp: int.type,\n  is_executable: bool.type = None,\n  is_tree: bool.type = None,\n  is_directory: bool.type = None\n) -> ""\n')))),(0,a.mdx)("tr",null,(0,a.mdx)("td",null,(0,a.mdx)("p",null,"copied_dir")),(0,a.mdx)("td",null),(0,a.mdx)("td",null,(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'(\n    output: "",\n  srcs: ""\n) -> ""\n')))),(0,a.mdx)("tr",null,(0,a.mdx)("td",null,(0,a.mdx)("p",null,"copy_dir")),(0,a.mdx)("td",null),(0,a.mdx)("td",null,(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'(\n    dest: "",\n  src: ""\n) -> ""\n')))),(0,a.mdx)("tr",null,(0,a.mdx)("td",null,(0,a.mdx)("p",null,"copy_file")),(0,a.mdx)("td",null),(0,a.mdx)("td",null,(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'(\n    dest: "",\n  src: ""\n) -> ""\n')))),(0,a.mdx)("tr",null,(0,a.mdx)("td",null,(0,a.mdx)("p",null,"declare_output")),(0,a.mdx)("td",null),(0,a.mdx)("td",null,(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'(\n    prefix: str.type,\n  filename: [None, str.type] = None,\n  *,\n  dir: bool.type = None\n) -> "artifact"\n')))),(0,a.mdx)("tr",null,(0,a.mdx)("td",null,(0,a.mdx)("p",null,"download_file")),(0,a.mdx)("td",null),(0,a.mdx)("td",null,(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'(\n    output: "",\n  url: str.type,\n  *,\n  sha1: [None, str.type] = None,\n  sha256: [None, str.type] = None,\n  is_executable: bool.type = None,\n  is_deferrable: bool.type = None\n) -> ""\n')))),(0,a.mdx)("tr",null,(0,a.mdx)("td",null,(0,a.mdx)("p",null,"dynamic_output")),(0,a.mdx)("td",null),(0,a.mdx)("td",null,(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'(\n    *,\n  dynamic: ["artifact"],\n  inputs: ["artifact"],\n  outputs: ["output_artifact"],\n  f: ""\n) -> None\n')))),(0,a.mdx)("tr",null,(0,a.mdx)("td",null,(0,a.mdx)("p",null,"run")),(0,a.mdx)("td",null),(0,a.mdx)("td",null,(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'(\n    arguments: "",\n  *,\n  category: str.type,\n  identifier: [None, str.type] = None,\n  env: [None, {str.type: ""}] = None,\n  local_only: bool.type = None,\n  prefer_local: bool.type = None,\n  always_print_stderr: bool.type = None,\n  weight: [None, int.type] = None,\n  weight_percentage: [None, int.type] = None,\n  dep_files: [None, {str.type: ""}] = None,\n  metadata_env_var: [None, str.type] = None,\n  metadata_path: [None, str.type] = None,\n  no_outputs_cleanup: bool.type = None,\n  allow_cache_upload: bool.type = None,\n  force_full_hybrid_if_capable: bool.type = None\n) -> None\n')))),(0,a.mdx)("tr",null,(0,a.mdx)("td",null,(0,a.mdx)("p",null,"symlink_dir")),(0,a.mdx)("td",null),(0,a.mdx)("td",null,(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'(\n    dest: "",\n  src: ""\n) -> ""\n')))),(0,a.mdx)("tr",null,(0,a.mdx)("td",null,(0,a.mdx)("p",null,"symlink_file")),(0,a.mdx)("td",null),(0,a.mdx)("td",null,(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'(\n    dest: "",\n  src: ""\n) -> ""\n')))),(0,a.mdx)("tr",null,(0,a.mdx)("td",null,(0,a.mdx)("p",null,"symlinked_dir")),(0,a.mdx)("td",null),(0,a.mdx)("td",null,(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'(\n    output: "",\n  srcs: ""\n) -> ""\n')))),(0,a.mdx)("tr",null,(0,a.mdx)("td",null,(0,a.mdx)("p",null,"tset")),(0,a.mdx)("td",null),(0,a.mdx)("td",null,(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'(\n    definition: "",\n  value: [None, ""] = None,\n  children: [None, ""] = None\n) -> ""\n')))),(0,a.mdx)("tr",null,(0,a.mdx)("td",null,(0,a.mdx)("p",null,"write")),(0,a.mdx)("td",null),(0,a.mdx)("td",null,(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'(\n    output: "",\n  content: "",\n  *,\n  is_executable: bool.type = None,\n  allow_args: bool.type = None,\n  with_inputs: bool.type = None\n) -> ""\n')))),(0,a.mdx)("tr",null,(0,a.mdx)("td",null,(0,a.mdx)("p",null,"write_json")),(0,a.mdx)("td",null),(0,a.mdx)("td",null,(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'(\n    output: "",\n  content: "",\n  *,\n  with_inputs: bool.type = None\n) -> ""\n')))))),(0,a.mdx)("h2",{id:"anon_target"},"anon_target"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def anon_target(rule: "rule", attrs: {str.type: ""}) -> "promise"\n')),(0,a.mdx)("p",null,"Generate an anonymous target"),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"anon_targets"},"anon_targets"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def anon_targets(rules: [("rule", {str.type: ""})]) -> "promise"\n')),(0,a.mdx)("p",null,"Generate a series of anonymous targets"),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"artifact_tag"},"artifact_tag"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def artifact_tag() -> ""\n')),(0,a.mdx)("p",null,"Allocate a new input tag"),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"cas_artifact"},"cas_artifact"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def cas_artifact(\n    output: "",\n  digest: str.type,\n  use_case: str.type,\n  *,\n  expires_after_timestamp: int.type,\n  is_executable: bool.type = None,\n  is_tree: bool.type = None,\n  is_directory: bool.type = None\n) -> ""\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"copied_dir"},"copied_dir"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def copied_dir(output: "", srcs: "") -> ""\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"copy_dir"},"copy_dir"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def copy_dir(dest: "", src: "") -> ""\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"copy_file"},"copy_file"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def copy_file(dest: "", src: "") -> ""\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"declare_output"},"declare_output"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def declare_output(prefix: str.type, filename: [None, str.type] = None, *, dir: bool.type = None) -> "artifact"\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"download_file"},"download_file"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def download_file(\n    output: "",\n  url: str.type,\n  *,\n  sha1: [None, str.type] = None,\n  sha256: [None, str.type] = None,\n  is_executable: bool.type = None,\n  is_deferrable: bool.type = None\n) -> ""\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"dynamic_output"},"dynamic_output"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def dynamic_output(*, dynamic: ["artifact"], inputs: ["artifact"], outputs: ["output_artifact"], f: "") -> None\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"run"},"run"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def run(\n    arguments: "",\n  *,\n  category: str.type,\n  identifier: [None, str.type] = None,\n  env: [None, {str.type: ""}] = None,\n  local_only: bool.type = None,\n  prefer_local: bool.type = None,\n  always_print_stderr: bool.type = None,\n  weight: [None, int.type] = None,\n  weight_percentage: [None, int.type] = None,\n  dep_files: [None, {str.type: ""}] = None,\n  metadata_env_var: [None, str.type] = None,\n  metadata_path: [None, str.type] = None,\n  no_outputs_cleanup: bool.type = None,\n  allow_cache_upload: bool.type = None,\n  force_full_hybrid_if_capable: bool.type = None\n) -> None\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"symlink_dir"},"symlink_dir"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def symlink_dir(dest: "", src: "") -> ""\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"symlink_file"},"symlink_file"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def symlink_file(dest: "", src: "") -> ""\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"symlinked_dir"},"symlinked_dir"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def symlinked_dir(output: "", srcs: "") -> ""\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"tset"},"tset"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def tset(definition: "", value: [None, ""] = None, children: [None, ""] = None) -> ""\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"write"},"write"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def write(output: "", content: "", *, is_executable: bool.type = None, allow_args: bool.type = None, with_inputs: bool.type = None) -> ""\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"write_json"},"write_json"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def write_json(output: "", content: "", *, with_inputs: bool.type = None) -> ""\n')))}i.isMDXComponent=!0}}]);
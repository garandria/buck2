"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[539],{3905:(l,e,n)=>{n.r(e),n.d(e,{MDXContext:()=>i,MDXProvider:()=>u,mdx:()=>c,useMDXComponents:()=>o,withMDXComponents:()=>x});var t=n(67294);function d(l,e,n){return e in l?Object.defineProperty(l,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):l[e]=n,l}function m(){return m=Object.assign||function(l){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(l[t]=n[t])}return l},m.apply(this,arguments)}function a(l,e){var n=Object.keys(l);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(l);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(l,e).enumerable}))),n.push.apply(n,t)}return n}function r(l){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){d(l,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(l,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(l,e,Object.getOwnPropertyDescriptor(n,e))}))}return l}function p(l,e){if(null==l)return{};var n,t,d=function(l,e){if(null==l)return{};var n,t,d={},m=Object.keys(l);for(t=0;t<m.length;t++)n=m[t],e.indexOf(n)>=0||(d[n]=l[n]);return d}(l,e);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(l);for(t=0;t<m.length;t++)n=m[t],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(l,n)&&(d[n]=l[n])}return d}var i=t.createContext({}),x=function(l){return function(e){var n=o(e.components);return t.createElement(l,m({},e,{components:n}))}},o=function(l){var e=t.useContext(i),n=e;return l&&(n="function"==typeof l?l(e):r(r({},e),l)),n},u=function(l){var e=o(l.components);return t.createElement(i.Provider,{value:e},l.children)},s="mdxType",_={inlineCode:"code",wrapper:function(l){var e=l.children;return t.createElement(t.Fragment,{},e)}},N=t.forwardRef((function(l,e){var n=l.components,d=l.mdxType,m=l.originalType,a=l.parentName,i=p(l,["components","mdxType","originalType","parentName"]),x=o(n),u=d,s=x["".concat(a,".").concat(u)]||x[u]||_[u]||m;return n?t.createElement(s,r(r({ref:e},i),{},{components:n})):t.createElement(s,r({ref:e},i))}));function c(l,e){var n=arguments,d=e&&e.mdxType;if("string"==typeof l||d){var m=n.length,a=new Array(m);a[0]=N;var r={};for(var p in e)hasOwnProperty.call(e,p)&&(r[p]=e[p]);r.originalType=l,r[s]="string"==typeof l?l:d,a[1]=r;for(var i=2;i<m;i++)a[i]=n[i];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}N.displayName="MDXCreateElement"},95618:(l,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>a,default:()=>o,frontMatter:()=>m,metadata:()=>r,toc:()=>i});var t=n(87462),d=(n(67294),n(3905));const m={},a=void 0,r={unversionedId:"generated/starlark/prelude/prelude.bzl",id:"generated/starlark/prelude/prelude.bzl",title:"prelude.bzl",description:"native",source:"@site/../docs/generated/starlark/prelude/prelude.bzl.md",sourceDirName:"generated/starlark/prelude",slug:"/generated/starlark/prelude/prelude.bzl",permalink:"/docs/generated/starlark/prelude/prelude.bzl",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"manualSidebar",previous:{title:"Prelude Rules API",permalink:"/docs/generated/starlark/prelude"},next:{title:"Writing Rules",permalink:"/docs/rule_authors/writing_rules"}},p={},i=[{value:"native",id:"native",level:2},{value:"Members",id:"members",level:3},{value:"CommandExecutorConfig",id:"commandexecutorconfig",level:2},{value:"ConfigurationInfo : <code>UNKNOWN</code>",id:"configurationinfo--unknown",level:2},{value:"ConstraintSettingInfo : <code>UNKNOWN</code>",id:"constraintsettinginfo--unknown",level:2},{value:"ConstraintValueInfo : <code>UNKNOWN</code>",id:"constraintvalueinfo--unknown",level:2},{value:"DefaultInfo : <code>UNKNOWN</code>",id:"defaultinfo--unknown",level:2},{value:"ExecutionPlatformInfo : <code>UNKNOWN</code>",id:"executionplatforminfo--unknown",level:2},{value:"ExecutionPlatformRegistrationInfo : <code>UNKNOWN</code>",id:"executionplatformregistrationinfo--unknown",level:2},{value:"ExternalRunnerTestInfo : <code>UNKNOWN</code>",id:"externalrunnertestinfo--unknown",level:2},{value:"InstallInfo : <code>UNKNOWN</code>",id:"installinfo--unknown",level:2},{value:"PlatformInfo : <code>UNKNOWN</code>",id:"platforminfo--unknown",level:2},{value:"RunInfo : <code>UNKNOWN</code>",id:"runinfo--unknown",level:2},{value:"TemplatePlaceholderInfo : <code>UNKNOWN</code>",id:"templateplaceholderinfo--unknown",level:2},{value:"abs",id:"abs",level:2},{value:"alias",id:"alias",level:2},{value:"Parameters",id:"parameters",level:3},{value:"android_aar",id:"android_aar",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"android_app_modularity",id:"android_app_modularity",level:2},{value:"Parameters",id:"parameters-2",level:3},{value:"android_binary",id:"android_binary",level:2},{value:"android_build_config",id:"android_build_config",level:2},{value:"Parameters",id:"parameters-3",level:3},{value:"android_bundle",id:"android_bundle",level:2},{value:"Parameters",id:"parameters-4",level:3},{value:"android_instrumentation_apk",id:"android_instrumentation_apk",level:2},{value:"android_instrumentation_test",id:"android_instrumentation_test",level:2},{value:"Parameters",id:"parameters-5",level:3},{value:"android_library",id:"android_library",level:2},{value:"Parameters",id:"parameters-6",level:3},{value:"android_manifest",id:"android_manifest",level:2},{value:"Parameters",id:"parameters-7",level:3},{value:"android_platform",id:"android_platform",level:2},{value:"Parameters",id:"parameters-8",level:3},{value:"android_prebuilt_aar",id:"android_prebuilt_aar",level:2},{value:"Parameters",id:"parameters-9",level:3},{value:"android_resource",id:"android_resource",level:2},{value:"Parameters",id:"parameters-10",level:3},{value:"apk_genrule",id:"apk_genrule",level:2},{value:"Parameters",id:"parameters-11",level:3},{value:"apple_asset_catalog",id:"apple_asset_catalog",level:2},{value:"Parameters",id:"parameters-12",level:3},{value:"apple_binary",id:"apple_binary",level:2},{value:"apple_bundle",id:"apple_bundle",level:2},{value:"apple_library",id:"apple_library",level:2},{value:"apple_package",id:"apple_package",level:2},{value:"apple_resource",id:"apple_resource",level:2},{value:"Parameters",id:"parameters-13",level:3},{value:"apple_resource_bundle",id:"apple_resource_bundle",level:2},{value:"Parameters",id:"parameters-14",level:3},{value:"apple_test",id:"apple_test",level:2},{value:"apple_toolchain",id:"apple_toolchain",level:2},{value:"Parameters",id:"parameters-15",level:3},{value:"apple_toolchain_override",id:"apple_toolchain_override",level:2},{value:"Parameters",id:"parameters-16",level:3},{value:"apple_toolchain_set",id:"apple_toolchain_set",level:2},{value:"Parameters",id:"parameters-17",level:3},{value:"apple_tools",id:"apple_tools",level:2},{value:"Parameters",id:"parameters-18",level:3},{value:"apple_watchos_bundle",id:"apple_watchos_bundle",level:2},{value:"attrs : <code>UNKNOWN</code>",id:"attrs--unknown",level:2},{value:"breakpoint",id:"breakpoint",level:2},{value:"cgo_library",id:"cgo_library",level:2},{value:"Parameters",id:"parameters-19",level:3},{value:"cmd_args",id:"cmd_args",level:2},{value:"command_alias",id:"command_alias",level:2},{value:"Parameters",id:"parameters-20",level:3},{value:"config_setting",id:"config_setting",level:2},{value:"Parameters",id:"parameters-21",level:3},{value:"configured_alias",id:"configured_alias",level:2},{value:"constraint_setting",id:"constraint_setting",level:2},{value:"Parameters",id:"parameters-22",level:3},{value:"constraint_value",id:"constraint_value",level:2},{value:"Parameters",id:"parameters-23",level:3},{value:"core_data_model",id:"core_data_model",level:2},{value:"Parameters",id:"parameters-24",level:3},{value:"csharp_library",id:"csharp_library",level:2},{value:"Parameters",id:"parameters-25",level:3},{value:"cxx : <code>UNKNOWN</code>",id:"cxx--unknown",level:2},{value:"cxx_binary",id:"cxx_binary",level:2},{value:"Parameters",id:"parameters-26",level:3},{value:"cxx_genrule",id:"cxx_genrule",level:2},{value:"Parameters",id:"parameters-27",level:3},{value:"cxx_library",id:"cxx_library",level:2},{value:"Parameters",id:"parameters-28",level:3},{value:"cxx_lua_extension",id:"cxx_lua_extension",level:2},{value:"Parameters",id:"parameters-29",level:3},{value:"cxx_precompiled_header",id:"cxx_precompiled_header",level:2},{value:"Parameters",id:"parameters-30",level:3},{value:"cxx_python_extension",id:"cxx_python_extension",level:2},{value:"Parameters",id:"parameters-31",level:3},{value:"cxx_test",id:"cxx_test",level:2},{value:"Parameters",id:"parameters-32",level:3},{value:"cxx_toolchain",id:"cxx_toolchain",level:2},{value:"d_binary",id:"d_binary",level:2},{value:"Parameters",id:"parameters-33",level:3},{value:"d_library",id:"d_library",level:2},{value:"Parameters",id:"parameters-34",level:3},{value:"d_test",id:"d_test",level:2},{value:"Parameters",id:"parameters-35",level:3},{value:"debug",id:"debug",level:2},{value:"enum",id:"enum",level:2},{value:"erlang_app",id:"erlang_app",level:2},{value:"Parameters",id:"parameters-36",level:3},{value:"erlang_app_includes",id:"erlang_app_includes",level:2},{value:"Parameters",id:"parameters-37",level:3},{value:"erlang_application",id:"erlang_application",level:2},{value:"erlang_escript",id:"erlang_escript",level:2},{value:"Parameters",id:"parameters-38",level:3},{value:"erlang_otp_binaries",id:"erlang_otp_binaries",level:2},{value:"Parameters",id:"parameters-39",level:3},{value:"erlang_rebar3_interface",id:"erlang_rebar3_interface",level:2},{value:"Parameters",id:"parameters-40",level:3},{value:"erlang_release",id:"erlang_release",level:2},{value:"Parameters",id:"parameters-41",level:3},{value:"erlang_test",id:"erlang_test",level:2},{value:"Parameters",id:"parameters-42",level:3},{value:"erlang_tests",id:"erlang_tests",level:2},{value:"experimental_regex",id:"experimental_regex",level:2},{value:"export_file",id:"export_file",level:2},{value:"external_test_runner",id:"external_test_runner",level:2},{value:"Parameters",id:"parameters-43",level:3},{value:"extract_archive",id:"extract_archive",level:2},{value:"Parameters",id:"parameters-44",level:3},{value:"field",id:"field",level:2},{value:"Details",id:"details",level:3},{value:"filegroup",id:"filegroup",level:2},{value:"Parameters",id:"parameters-45",level:3},{value:"filter",id:"filter",level:2},{value:"gen_aidl",id:"gen_aidl",level:2},{value:"Parameters",id:"parameters-46",level:3},{value:"genrule",id:"genrule",level:2},{value:"Parameters",id:"parameters-47",level:3},{value:"get_base_path",id:"get_base_path",level:2},{value:"get_cell_name",id:"get_cell_name",level:2},{value:"glob",id:"glob",level:2},{value:"go_binary",id:"go_binary",level:2},{value:"Parameters",id:"parameters-48",level:3},{value:"go_exported_library",id:"go_exported_library",level:2},{value:"Parameters",id:"parameters-49",level:3},{value:"go_library",id:"go_library",level:2},{value:"Parameters",id:"parameters-50",level:3},{value:"go_test",id:"go_test",level:2},{value:"Parameters",id:"parameters-51",level:3},{value:"go_test_runner",id:"go_test_runner",level:2},{value:"Parameters",id:"parameters-52",level:3},{value:"groovy_library",id:"groovy_library",level:2},{value:"Parameters",id:"parameters-53",level:3},{value:"groovy_test",id:"groovy_test",level:2},{value:"Parameters",id:"parameters-54",level:3},{value:"gwt_binary",id:"gwt_binary",level:2},{value:"Parameters",id:"parameters-55",level:3},{value:"halide_library",id:"halide_library",level:2},{value:"Parameters",id:"parameters-56",level:3},{value:"haskell_binary",id:"haskell_binary",level:2},{value:"Parameters",id:"parameters-57",level:3},{value:"haskell_ghci",id:"haskell_ghci",level:2},{value:"Parameters",id:"parameters-58",level:3},{value:"haskell_haddock",id:"haskell_haddock",level:2},{value:"Parameters",id:"parameters-59",level:3},{value:"haskell_ide",id:"haskell_ide",level:2},{value:"Parameters",id:"parameters-60",level:3},{value:"haskell_library",id:"haskell_library",level:2},{value:"Parameters",id:"parameters-61",level:3},{value:"haskell_prebuilt_library",id:"haskell_prebuilt_library",level:2},{value:"Parameters",id:"parameters-62",level:3},{value:"host_info",id:"host_info",level:2},{value:"http_archive",id:"http_archive",level:2},{value:"Parameters",id:"parameters-63",level:3},{value:"http_file",id:"http_file",level:2},{value:"Parameters",id:"parameters-64",level:3},{value:"implicit_package_symbol",id:"implicit_package_symbol",level:2},{value:"jar_genrule",id:"jar_genrule",level:2},{value:"Parameters",id:"parameters-65",level:3},{value:"java_annotation_processor",id:"java_annotation_processor",level:2},{value:"Parameters",id:"parameters-66",level:3},{value:"java_binary",id:"java_binary",level:2},{value:"Parameters",id:"parameters-67",level:3},{value:"java_library",id:"java_library",level:2},{value:"Parameters",id:"parameters-68",level:3},{value:"java_plugin",id:"java_plugin",level:2},{value:"Parameters",id:"parameters-69",level:3},{value:"java_test",id:"java_test",level:2},{value:"Parameters",id:"parameters-70",level:3},{value:"java_test_runner",id:"java_test_runner",level:2},{value:"Parameters",id:"parameters-71",level:3},{value:"js_bundle",id:"js_bundle",level:2},{value:"Parameters",id:"parameters-72",level:3},{value:"js_bundle_genrule",id:"js_bundle_genrule",level:2},{value:"Parameters",id:"parameters-73",level:3},{value:"js_library",id:"js_library",level:2},{value:"Parameters",id:"parameters-74",level:3},{value:"json : <code>UNKNOWN</code>",id:"json--unknown",level:2},{value:"julia_binary",id:"julia_binary",level:2},{value:"Parameters",id:"parameters-75",level:3},{value:"julia_jll_library",id:"julia_jll_library",level:2},{value:"Parameters",id:"parameters-76",level:3},{value:"julia_library",id:"julia_library",level:2},{value:"Parameters",id:"parameters-77",level:3},{value:"julia_test",id:"julia_test",level:2},{value:"Parameters",id:"parameters-78",level:3},{value:"keystore",id:"keystore",level:2},{value:"Parameters",id:"parameters-79",level:3},{value:"kotlin_library",id:"kotlin_library",level:2},{value:"Parameters",id:"parameters-80",level:3},{value:"kotlin_test",id:"kotlin_test",level:2},{value:"Parameters",id:"parameters-81",level:3},{value:"legacy_toolchain",id:"legacy_toolchain",level:2},{value:"Parameters",id:"parameters-82",level:3},{value:"link_group_map",id:"link_group_map",level:2},{value:"Parameters",id:"parameters-83",level:3},{value:"load_symbols",id:"load_symbols",level:2},{value:"lua_binary",id:"lua_binary",level:2},{value:"Parameters",id:"parameters-84",level:3},{value:"lua_library",id:"lua_library",level:2},{value:"Parameters",id:"parameters-85",level:3},{value:"map",id:"map",level:2},{value:"ndk_library",id:"ndk_library",level:2},{value:"Parameters",id:"parameters-86",level:3},{value:"ndk_toolchain",id:"ndk_toolchain",level:2},{value:"Parameters",id:"parameters-87",level:3},{value:"ocaml_binary",id:"ocaml_binary",level:2},{value:"Parameters",id:"parameters-88",level:3},{value:"ocaml_library",id:"ocaml_library",level:2},{value:"Parameters",id:"parameters-89",level:3},{value:"ocaml_object",id:"ocaml_object",level:2},{value:"Parameters",id:"parameters-90",level:3},{value:"ocaml_shared",id:"ocaml_shared",level:2},{value:"Parameters",id:"parameters-91",level:3},{value:"oncall",id:"oncall",level:2},{value:"package",id:"package",level:2},{value:"package_name",id:"package_name",level:2},{value:"partial",id:"partial",level:2},{value:"platform",id:"platform",level:2},{value:"Parameters",id:"parameters-92",level:3},{value:"pprint",id:"pprint",level:2},{value:"prebuilt_apple_framework",id:"prebuilt_apple_framework",level:2},{value:"Parameters",id:"parameters-93",level:3},{value:"prebuilt_cxx_library",id:"prebuilt_cxx_library",level:2},{value:"prebuilt_cxx_library_group",id:"prebuilt_cxx_library_group",level:2},{value:"Parameters",id:"parameters-94",level:3},{value:"prebuilt_dotnet_library",id:"prebuilt_dotnet_library",level:2},{value:"Parameters",id:"parameters-95",level:3},{value:"prebuilt_go_library",id:"prebuilt_go_library",level:2},{value:"Parameters",id:"parameters-96",level:3},{value:"prebuilt_jar",id:"prebuilt_jar",level:2},{value:"Parameters",id:"parameters-97",level:3},{value:"prebuilt_native_library",id:"prebuilt_native_library",level:2},{value:"Parameters",id:"parameters-98",level:3},{value:"prebuilt_ocaml_library",id:"prebuilt_ocaml_library",level:2},{value:"Parameters",id:"parameters-99",level:3},{value:"prebuilt_python_library",id:"prebuilt_python_library",level:2},{value:"Parameters",id:"parameters-100",level:3},{value:"prebuilt_rust_library",id:"prebuilt_rust_library",level:2},{value:"Parameters",id:"parameters-101",level:3},{value:"print",id:"print",level:2},{value:"provider",id:"provider",level:2},{value:"python : <code>UNKNOWN</code>",id:"python--unknown",level:2},{value:"python_binary",id:"python_binary",level:2},{value:"Parameters",id:"parameters-102",level:3},{value:"python_bootstrap_binary",id:"python_bootstrap_binary",level:2},{value:"Parameters",id:"parameters-103",level:3},{value:"python_bootstrap_library",id:"python_bootstrap_library",level:2},{value:"Parameters",id:"parameters-104",level:3},{value:"python_library",id:"python_library",level:2},{value:"python_needed_coverage_test",id:"python_needed_coverage_test",level:2},{value:"Parameters",id:"parameters-105",level:3},{value:"python_test",id:"python_test",level:2},{value:"Parameters",id:"parameters-106",level:3},{value:"python_test_runner",id:"python_test_runner",level:2},{value:"Parameters",id:"parameters-107",level:3},{value:"read_config",id:"read_config",level:2},{value:"read_package_value",id:"read_package_value",level:2},{value:"Details",id:"details-1",level:3},{value:"read_root_config",id:"read_root_config",level:2},{value:"record",id:"record",level:2},{value:"regex_match",id:"regex_match",level:2},{value:"remote_file",id:"remote_file",level:2},{value:"Parameters",id:"parameters-108",level:3},{value:"repository_name",id:"repository_name",level:2},{value:"resource_group_map",id:"resource_group_map",level:2},{value:"Parameters",id:"parameters-109",level:3},{value:"robolectric_test",id:"robolectric_test",level:2},{value:"Parameters",id:"parameters-110",level:3},{value:"rule",id:"rule",level:2},{value:"rule_exists",id:"rule_exists",level:2},{value:"rust_binary",id:"rust_binary",level:2},{value:"Parameters",id:"parameters-111",level:3},{value:"rust_library",id:"rust_library",level:2},{value:"Parameters",id:"parameters-112",level:3},{value:"rust_test",id:"rust_test",level:2},{value:"Parameters",id:"parameters-113",level:3},{value:"scala_library",id:"scala_library",level:2},{value:"Parameters",id:"parameters-114",level:3},{value:"scala_test",id:"scala_test",level:2},{value:"Parameters",id:"parameters-115",level:3},{value:"scene_kit_assets",id:"scene_kit_assets",level:2},{value:"Parameters",id:"parameters-116",level:3},{value:"select",id:"select",level:2},{value:"select_equal_internal",id:"select_equal_internal",level:2},{value:"select_map",id:"select_map",level:2},{value:"select_test",id:"select_test",level:2},{value:"sh_binary",id:"sh_binary",level:2},{value:"Parameters",id:"parameters-117",level:3},{value:"sh_test",id:"sh_test",level:2},{value:"Parameters",id:"parameters-118",level:3},{value:"sha256",id:"sha256",level:2},{value:"struct",id:"struct",level:2},{value:"supermodule_target_graph",id:"supermodule_target_graph",level:2},{value:"Parameters",id:"parameters-119",level:3},{value:"swift_library",id:"swift_library",level:2},{value:"Parameters",id:"parameters-120",level:3},{value:"swift_toolchain",id:"swift_toolchain",level:2},{value:"Parameters",id:"parameters-121",level:3},{value:"test_suite",id:"test_suite",level:2},{value:"Parameters",id:"parameters-122",level:3},{value:"transition",id:"transition",level:2},{value:"transitive_set",id:"transitive_set",level:2},{value:"versioned_alias",id:"versioned_alias",level:2},{value:"warning",id:"warning",level:2},{value:"worker_tool",id:"worker_tool",level:2},{value:"Parameters",id:"parameters-123",level:3},{value:"write_package_value",id:"write_package_value",level:2},{value:"xcode_postbuild_script",id:"xcode_postbuild_script",level:2},{value:"Parameters",id:"parameters-124",level:3},{value:"xcode_prebuild_script",id:"xcode_prebuild_script",level:2},{value:"Parameters",id:"parameters-125",level:3},{value:"xcode_workspace_config",id:"xcode_workspace_config",level:2},{value:"Parameters",id:"parameters-126",level:3},{value:"zip_file",id:"zip_file",level:2},{value:"Parameters",id:"parameters-127",level:3}],x={toc:i};function o(l){let{components:e,...n}=l;return(0,d.mdx)("wrapper",(0,t.Z)({},x,n,{components:e,mdxType:"MDXLayout"}),(0,d.mdx)("h2",{id:"native"},"native"),(0,d.mdx)("h3",{id:"members"},"Members"),(0,d.mdx)("h2",{id:"commandexecutorconfig"},"CommandExecutorConfig"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def CommandExecutorConfig(\n    local_enabled: bool.type,\n  remote_enabled: bool.type,\n  *,\n  remote_cache_enabled: [None, bool.type] = None,\n  remote_execution_properties: "" = None,\n  remote_execution_action_key: "" = None,\n  remote_execution_max_input_files_mebibytes: [None, int.type] = None,\n  remote_execution_queue_time_threshold_s: [None, int.type] = None,\n  remote_execution_use_case: "" = None,\n  use_limited_hybrid: bool.type = None,\n  allow_limited_hybrid_fallbacks: bool.type = None,\n  allow_hybrid_fallbacks_on_failure: bool.type = None,\n  use_windows_path_separators: bool.type = None,\n  allow_cache_uploads: bool.type = None,\n  max_cache_upload_mebibytes: [None, int.type] = None,\n  experimental_low_pass_filter: bool.type = None,\n  remote_output_paths: [None, str.type] = None\n) -> ""\n')),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"configurationinfo--unknown"},"ConfigurationInfo : ",(0,d.mdx)("inlineCode",{parentName:"h2"},"UNKNOWN")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"constraintsettinginfo--unknown"},"ConstraintSettingInfo : ",(0,d.mdx)("inlineCode",{parentName:"h2"},"UNKNOWN")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"constraintvalueinfo--unknown"},"ConstraintValueInfo : ",(0,d.mdx)("inlineCode",{parentName:"h2"},"UNKNOWN")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"defaultinfo--unknown"},"DefaultInfo : ",(0,d.mdx)("inlineCode",{parentName:"h2"},"UNKNOWN")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"executionplatforminfo--unknown"},"ExecutionPlatformInfo : ",(0,d.mdx)("inlineCode",{parentName:"h2"},"UNKNOWN")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"executionplatformregistrationinfo--unknown"},"ExecutionPlatformRegistrationInfo : ",(0,d.mdx)("inlineCode",{parentName:"h2"},"UNKNOWN")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"externalrunnertestinfo--unknown"},"ExternalRunnerTestInfo : ",(0,d.mdx)("inlineCode",{parentName:"h2"},"UNKNOWN")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"installinfo--unknown"},"InstallInfo : ",(0,d.mdx)("inlineCode",{parentName:"h2"},"UNKNOWN")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"platforminfo--unknown"},"PlatformInfo : ",(0,d.mdx)("inlineCode",{parentName:"h2"},"UNKNOWN")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"runinfo--unknown"},"RunInfo : ",(0,d.mdx)("inlineCode",{parentName:"h2"},"UNKNOWN")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"templateplaceholderinfo--unknown"},"TemplatePlaceholderInfo : ",(0,d.mdx)("inlineCode",{parentName:"h2"},"UNKNOWN")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"abs"},"abs"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def abs(x: int.type) -> int.type\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"alias"},"alias"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def alias(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  actual: str.type,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"actual"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"android_aar"},"android_aar"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def android_aar(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  abi_generation_mode: [None, str.type] = None,\n  annotation_processing_tool: [None, str.type] = None,\n  annotation_processor_deps: [str.type] = None,\n  annotation_processor_params: [str.type] = None,\n  annotation_processors: [str.type] = None,\n  build_config_values: [str.type] = None,\n  build_config_values_file: [None, str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  deps_query: [None, str.type] = None,\n  enable_relinker: bool.type = None,\n  exported_deps: [str.type] = None,\n  exported_provided_deps: [str.type] = None,\n  extra_arguments: [str.type] = None,\n  extra_kotlinc_arguments: [str.type] = None,\n  friend_paths: [str.type] = None,\n  include_build_config_class: bool.type = None,\n  java_version: [None, str.type] = None,\n  javac: [None, str.type] = None,\n  kotlin_compiler_plugins: {str.type: {str.type: str.type}} = None,\n  labels: [str.type] = None,\n  language: [None, str.type] = None,\n  licenses: [str.type] = None,\n  manifest: [None, str.type] = None,\n  manifest_file: [None, str.type] = None,\n  manifest_skeleton: str.type,\n  maven_coords: [None, str.type] = None,\n  native_library_merge_code_generator: [None, str.type] = None,\n  native_library_merge_glue: [None, str.type] = None,\n  native_library_merge_localized_symbols: [None, [str.type]] = None,\n  native_library_merge_map: [None, {str.type: [str.type]}] = None,\n  native_library_merge_sequence: [None, [(str.type, [str.type])]] = None,\n  native_library_merge_sequence_blocklist: [None, [str.type]] = None,\n  never_mark_as_unused_dependency: [None, bool.type] = None,\n  on_unused_dependencies: [None, str.type] = None,\n  plugins: [str.type] = None,\n  proguard_config: [None, str.type] = None,\n  provided_deps: [str.type] = None,\n  provided_deps_query: [None, str.type] = None,\n  relinker_whitelist: [str.type] = None,\n  remove_classes: [str.type] = None,\n  required_for_source_only_abi: bool.type = None,\n  resource_union_package: [None, str.type] = None,\n  resources: [str.type] = None,\n  resources_root: [None, str.type] = None,\n  runtime_deps: [str.type] = None,\n  source: [None, str.type] = None,\n  source_abi_verification_mode: [None, str.type] = None,\n  source_only_abi_deps: [str.type] = None,\n  srcs: [str.type] = None,\n  target: [None, str.type] = None,\n  use_jvm_abi_gen: [None, bool.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-1"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"abi_generation_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processing_tool"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_params"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processors"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"build_config_values"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"build_config_values_file"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps_query"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"enable_relinker"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_arguments"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_kotlinc_arguments"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"friend_paths"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"include_build_config_class"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"java_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"javac"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"kotlin_compiler_plugins"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"language"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest_file"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest_skeleton"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"maven_coords"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"native_library_merge_code_generator"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"native_library_merge_glue"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"native_library_merge_localized_symbols"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"native_library_merge_map"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"native_library_merge_sequence"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"native_library_merge_sequence_blocklist"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"never_mark_as_unused_dependency"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"on_unused_dependencies"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"plugins"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"proguard_config"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"provided_deps_query"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"relinker_whitelist"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"remove_classes"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"required_for_source_only_abi"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resource_union_package"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources_root"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"runtime_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_abi_verification_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_only_abi_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"use_jvm_abi_gen"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"android_app_modularity"},"android_app_modularity"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def android_app_modularity(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _android_toolchain: str.type = None,\n  application_module_blacklist: [None, [str.type]] = None,\n  application_module_configs: {str.type: [str.type]} = None,\n  application_module_dependencies: [None, {str.type: [str.type]}] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  no_dx: [str.type] = None,\n  should_include_classes: bool.type = None,\n  should_include_libraries: bool.type = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-2"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_android_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"application_module_blacklist"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"application_module_configs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"application_module_dependencies"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"no_dx"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"should_include_classes"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"should_include_libraries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"android_binary"},"android_binary"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def android_binary(cpu_filters: UNKNOWN = None, **kwargs: UNKNOWN) -> UNKNOWN\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"android_build_config"},"android_build_config"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def android_build_config(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _android_toolchain: str.type = None,\n  _build_only_native_code: default_only = None,\n  _is_building_android_binary: default_only = None,\n  _java_toolchain: str.type = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  package: str.type = None,\n  values: [str.type] = None,\n  values_file: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-3"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_android_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_build_only_native_code"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_is_building_android_binary"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_java_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"package"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"values"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"values_file"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"android_bundle"},"android_bundle"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def android_bundle(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  aapt2_keep_raw_values: bool.type = None,\n  aapt2_locale_filtering: bool.type = None,\n  aapt_mode: str.type = None,\n  additional_aapt_params: [str.type] = None,\n  allow_r_dot_java_in_secondary_dex: bool.type = None,\n  allowed_duplicate_resource_types: [str.type] = None,\n  android_sdk_proguard_config: [None, str.type] = None,\n  application_module_blacklist: [None, [str.type]] = None,\n  application_module_configs: {str.type: [str.type]} = None,\n  application_module_dependencies: [None, {str.type: [str.type]}] = None,\n  asset_compression_algorithm: [None, str.type] = None,\n  banned_duplicate_resource_types: [str.type] = None,\n  build_config_values: [str.type] = None,\n  build_config_values_file: [None, str.type] = None,\n  build_string_source_map: bool.type = None,\n  bundle_config_file: [None, str.type] = None,\n  compress_asset_libraries: bool.type = None,\n  contacts: [str.type] = None,\n  cpu_filters: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  dex_compression: [None, str.type] = None,\n  dex_group_lib_limit: int.type = None,\n  dex_tool: str.type = None,\n  disable_pre_dex: bool.type = None,\n  duplicate_resource_behavior: str.type = None,\n  duplicate_resource_whitelist: [None, str.type] = None,\n  enable_relinker: bool.type = None,\n  exopackage_modes: [str.type] = None,\n  extra_filtered_resources: [str.type] = None,\n  field_ref_count_buffer_space: int.type = None,\n  ignore_aapt_proguard_config: bool.type = None,\n  includes_vector_drawables: bool.type = None,\n  is_cacheable: bool.type = None,\n  is_voltron_language_pack_enabled: bool.type = None,\n  keystore: str.type,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  linear_alloc_hard_limit: int.type = None,\n  locales: [str.type] = None,\n  manifest: [None, str.type] = None,\n  manifest_entries: {str.type: ""} = None,\n  manifest_skeleton: [None, str.type] = None,\n  method_ref_count_buffer_space: int.type = None,\n  minimize_primary_dex_size: bool.type = None,\n  module_manifest_skeleton: [None, str.type] = None,\n  native_library_merge_code_generator: [None, str.type] = None,\n  native_library_merge_glue: [None, str.type] = None,\n  native_library_merge_localized_symbols: [None, [str.type]] = None,\n  native_library_merge_map: [None, {str.type: [str.type]}] = None,\n  native_library_merge_sequence: [None, [(str.type, [str.type])]] = None,\n  native_library_merge_sequence_blocklist: [None, [str.type]] = None,\n  no_auto_add_overlay_resources: bool.type = None,\n  no_auto_version_resources: bool.type = None,\n  no_dx: [str.type] = None,\n  no_version_transitions_resources: bool.type = None,\n  optimization_passes: int.type = None,\n  package_asset_libraries: bool.type = None,\n  package_type: str.type = None,\n  packaged_locales: [str.type] = None,\n  post_filter_resources_cmd: [None, str.type] = None,\n  preprocess_java_classes_bash: [None, str.type] = None,\n  preprocess_java_classes_cmd: [None, str.type] = None,\n  preprocess_java_classes_deps: [str.type] = None,\n  primary_dex_patterns: [str.type] = None,\n  proguard_config: [None, str.type] = None,\n  proguard_jvm_args: [str.type] = None,\n  relinker_whitelist: [str.type] = None,\n  resource_compression: str.type = None,\n  resource_filter: [str.type] = None,\n  resource_stable_ids: [None, str.type] = None,\n  resource_union_package: [None, str.type] = None,\n  secondary_dex_weight_limit: [None, int.type] = None,\n  skip_crunch_pngs: [None, bool.type] = None,\n  skip_proguard: bool.type = None,\n  trim_resource_ids: bool.type = None,\n  use_split_dex: bool.type = None,\n  within_view: [None, [None, [str.type]]] = None,\n  xz_compression_level: int.type = None\n) -> None\n')),(0,d.mdx)("h3",{id:"parameters-4"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"aapt2_keep_raw_values"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"aapt2_locale_filtering"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"aapt_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"additional_aapt_params"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"allow_r_dot_java_in_secondary_dex"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"allowed_duplicate_resource_types"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"android_sdk_proguard_config"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"application_module_blacklist"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"application_module_configs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"application_module_dependencies"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"asset_compression_algorithm"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"banned_duplicate_resource_types"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"build_config_values"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"build_config_values_file"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"build_string_source_map"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bundle_config_file"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compress_asset_libraries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cpu_filters"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"dex_compression"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"dex_group_lib_limit"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"dex_tool"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"disable_pre_dex"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"duplicate_resource_behavior"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"duplicate_resource_whitelist"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"enable_relinker"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exopackage_modes"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_filtered_resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"field_ref_count_buffer_space"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"ignore_aapt_proguard_config"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"includes_vector_drawables"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"is_cacheable"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"is_voltron_language_pack_enabled"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"keystore"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linear_alloc_hard_limit"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"locales"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest_entries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest_skeleton"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"method_ref_count_buffer_space"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"minimize_primary_dex_size"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"module_manifest_skeleton"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"native_library_merge_code_generator"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"native_library_merge_glue"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"native_library_merge_localized_symbols"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"native_library_merge_map"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"native_library_merge_sequence"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"native_library_merge_sequence_blocklist"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"no_auto_add_overlay_resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"no_auto_version_resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"no_dx"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"no_version_transitions_resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"optimization_passes"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"package_asset_libraries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"package_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"packaged_locales"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"post_filter_resources_cmd"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preprocess_java_classes_bash"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preprocess_java_classes_cmd"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preprocess_java_classes_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"primary_dex_patterns"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"proguard_config"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"proguard_jvm_args"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"relinker_whitelist"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resource_compression"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resource_filter"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resource_stable_ids"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resource_union_package"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"secondary_dex_weight_limit"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"skip_crunch_pngs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"skip_proguard"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"trim_resource_ids"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"use_split_dex"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"xz_compression_level"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"android_instrumentation_apk"},"android_instrumentation_apk"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def android_instrumentation_apk(cpu_filters: UNKNOWN = None, **kwargs: UNKNOWN) -> UNKNOWN\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"android_instrumentation_test"},"android_instrumentation_test"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def android_instrumentation_test(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _android_toolchain: str.type = None,\n  _inject_test_env: default_only = None,\n  _java_toolchain: str.type = None,\n  apk: str.type,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  env: {str.type: str.type} = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  test_rule_timeout_ms: [None, int.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-5"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_android_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_inject_test_env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_java_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"apk"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_rule_timeout_ms"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"android_library"},"android_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def android_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _android_toolchain: str.type = None,\n  _build_only_native_code: default_only = None,\n  _dex_min_sdk_version: default_only = None,\n  _dex_toolchain: str.type = None,\n  _is_building_android_binary: default_only = None,\n  _java_toolchain: str.type = None,\n  _kotlin_toolchain: str.type = None,\n  abi_generation_mode: [None, str.type] = None,\n  annotation_processing_tool: [None, str.type] = None,\n  annotation_processor_deps: [str.type] = None,\n  annotation_processor_params: [str.type] = None,\n  annotation_processors: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  deps_query: [None, str.type] = None,\n  exported_deps: [str.type] = None,\n  exported_provided_deps: [str.type] = None,\n  extra_arguments: [str.type] = None,\n  extra_kotlinc_arguments: [str.type] = None,\n  friend_paths: [str.type] = None,\n  java_version: [None, str.type] = None,\n  javac: [None, str.type] = None,\n  kotlin_compiler_plugins: {str.type: {str.type: str.type}} = None,\n  labels: [str.type] = None,\n  language: [None, str.type] = None,\n  licenses: [str.type] = None,\n  manifest: [None, str.type] = None,\n  manifest_file: [None, str.type] = None,\n  maven_coords: [None, str.type] = None,\n  never_mark_as_unused_dependency: [None, bool.type] = None,\n  on_unused_dependencies: [None, str.type] = None,\n  plugins: [str.type] = None,\n  proguard_config: [None, str.type] = None,\n  provided_deps: [str.type] = None,\n  provided_deps_query: [None, str.type] = None,\n  remove_classes: [str.type] = None,\n  required_for_source_only_abi: bool.type = None,\n  resource_union_package: [None, str.type] = None,\n  resources: [str.type] = None,\n  resources_root: [None, str.type] = None,\n  runtime_deps: [str.type] = None,\n  source: [None, str.type] = None,\n  source_abi_verification_mode: [None, str.type] = None,\n  source_only_abi_deps: [str.type] = None,\n  srcs: [str.type] = None,\n  target: [None, str.type] = None,\n  use_jvm_abi_gen: [None, bool.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-6"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_android_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_build_only_native_code"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_dex_min_sdk_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_dex_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_is_building_android_binary"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_java_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_kotlin_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"abi_generation_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processing_tool"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_params"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processors"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps_query"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_arguments"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_kotlinc_arguments"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"friend_paths"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"java_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"javac"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"kotlin_compiler_plugins"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"language"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest_file"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"maven_coords"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"never_mark_as_unused_dependency"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"on_unused_dependencies"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"plugins"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"proguard_config"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"provided_deps_query"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"remove_classes"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"required_for_source_only_abi"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resource_union_package"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources_root"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"runtime_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_abi_verification_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_only_abi_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"use_jvm_abi_gen"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"android_manifest"},"android_manifest"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def android_manifest(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _android_toolchain: str.type = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  skeleton: str.type,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-7"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_android_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"skeleton"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"android_platform"},"android_platform"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def android_platform(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  base_platform: str.type,\n  native_platforms: {str.type: str.type} = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-8"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"base_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"native_platforms"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"android_prebuilt_aar"},"android_prebuilt_aar"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def android_prebuilt_aar(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _android_toolchain: str.type = None,\n  _build_only_native_code: default_only = None,\n  _dex_min_sdk_version: default_only = None,\n  _dex_toolchain: str.type = None,\n  _java_toolchain: str.type = None,\n  aar: str.type,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  javadoc_url: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  maven_coords: [None, str.type] = None,\n  required_for_source_only_abi: bool.type = None,\n  source_jar: [None, str.type] = None,\n  use_system_library_loader: bool.type = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-9"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_android_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_build_only_native_code"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_dex_min_sdk_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_dex_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_java_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"aar"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"javadoc_url"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"maven_coords"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"required_for_source_only_abi"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_jar"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"use_system_library_loader"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"android_resource"},"android_resource"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def android_resource(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _android_toolchain: str.type = None,\n  _build_only_native_code: default_only = None,\n  allowlisted_locales: [None, [str.type]] = None,\n  assets: [None, [str.type, {str.type: str.type}]] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  has_whitelisted_strings: bool.type = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  manifest: [None, str.type] = None,\n  package: [None, str.type] = None,\n  project_assets: [None, str.type] = None,\n  project_res: [None, str.type] = None,\n  res: [None, [str.type, {str.type: str.type}]] = None,\n  resource_union: bool.type = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-10"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_android_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_build_only_native_code"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"allowlisted_locales"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"assets"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"has_whitelisted_strings"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"package"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"project_assets"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"project_res"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"res"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resource_union"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"apk_genrule"},"apk_genrule"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def apk_genrule(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _genrule_toolchain: default_only = None,\n  aab: [None, str.type] = None,\n  apk: [None, str.type] = None,\n  bash: [None, str.type] = None,\n  cacheable: [None, bool.type] = None,\n  cmd: [None, str.type] = None,\n  cmd_exe: [None, str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  enable_sandbox: [None, bool.type] = None,\n  environment_expansion_separator: [None, str.type] = None,\n  is_cacheable: bool.type = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  need_android_tools: bool.type = None,\n  out: [None, str.type] = None,\n  remote: [None, bool.type] = None,\n  srcs: [{str.type: str.type}, [str.type]] = None,\n  type: str.type = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-11"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_genrule_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"aab"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"apk"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bash"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cacheable"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cmd"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cmd_exe"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"enable_sandbox"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"environment_expansion_separator"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"is_cacheable"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"need_android_tools"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"out"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"remote"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"apple_asset_catalog"},"apple_asset_catalog"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def apple_asset_catalog(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  app_icon: [None, str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  dirs: [str.type] = None,\n  labels: [str.type] = None,\n  launch_image: [None, str.type] = None,\n  licenses: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-12"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"app_icon"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"dirs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"launch_image"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"apple_binary"},"apple_binary"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def apple_binary(**kwargs: UNKNOWN) -> UNKNOWN\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"apple_bundle"},"apple_bundle"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def apple_bundle(**kwargs: UNKNOWN) -> UNKNOWN\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"apple_library"},"apple_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def apple_library(**kwargs: UNKNOWN) -> UNKNOWN\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"apple_package"},"apple_package"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def apple_package(**kwargs: UNKNOWN) -> UNKNOWN\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"apple_resource"},"apple_resource"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def apple_resource(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  codesign_on_copy: bool.type = None,\n  contacts: [str.type] = None,\n  content_dirs: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  destination: [None, str.type] = None,\n  dirs: [str.type] = None,\n  files: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  named_variants: {str.type: [str.type]} = None,\n  resources_from_deps: [str.type] = None,\n  variants: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-13"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"codesign_on_copy"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"content_dirs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"destination"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"dirs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"files"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"named_variants"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources_from_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"variants"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"apple_resource_bundle"},"apple_resource_bundle"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def apple_resource_bundle(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _apple_toolchain: str.type = None,\n  _apple_tools: str.type = None,\n  _bundle_target_name: str.type,\n  _compile_resources_locally_override: [None, bool.type] = None,\n  asset_catalogs_compilation_options: {str.type: ""} = None,\n  binary: [None, str.type] = None,\n  deps: [str.type] = None,\n  extension: [str.type, str.type],\n  ibtool_flags: [None, [str.type]] = None,\n  ibtool_module_flag: [None, bool.type] = None,\n  info_plist: str.type,\n  info_plist_substitutions: {str.type: str.type} = None,\n  product_name: [None, str.type] = None,\n  resource_group: [None, str.type] = None,\n  resource_group_map: [None, [str.type, [(str.type, [(str.type, str.type, [None, str.type])])]]] = None\n) -> None\n')),(0,d.mdx)("h3",{id:"parameters-14"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_apple_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_apple_tools"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_bundle_target_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_compile_resources_locally_override"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"asset_catalogs_compilation_options"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"binary"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extension"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"ibtool_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"ibtool_module_flag"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"info_plist"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"info_plist_substitutions"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"product_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resource_group"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resource_group_map"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"apple_test"},"apple_test"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def apple_test(**kwargs: UNKNOWN) -> UNKNOWN\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"apple_toolchain"},"apple_toolchain"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def apple_toolchain(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _internal_platform_path: [None, str.type] = None,\n  _internal_sdk_path: [None, str.type] = None,\n  actool: str.type,\n  architecture: str.type = None,\n  build_version: [None, str.type] = None,\n  codesign: str.type,\n  codesign_allocate: str.type,\n  codesign_identities_command: [None, str.type] = None,\n  compile_resources_locally: bool.type = None,\n  contacts: [str.type] = None,\n  copy_scene_kit_assets: [None, str.type] = None,\n  cxx_toolchain: str.type,\n  default_host_platform: [None, str.type] = None,\n  developer_path: [None, str.type] = None,\n  dsymutil: str.type,\n  dwarfdump: [None, str.type] = None,\n  ibtool: str.type,\n  installer: default_only = None,\n  labels: [str.type] = None,\n  libtool: str.type,\n  licenses: [str.type] = None,\n  lipo: str.type,\n  min_version: [None, str.type] = None,\n  momc: str.type,\n  platform_path: [None, str.type] = None,\n  requires_xcode_version_match: bool.type = None,\n  sdk_environment: [None, str.type] = None,\n  sdk_name: str.type = None,\n  sdk_path: [None, str.type] = None,\n  swift_toolchain: [None, str.type] = None,\n  version: [None, str.type] = None,\n  watch_kit_stub_binary: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None,\n  work_around_dsymutil_lto_stack_overflow_bug: [None, bool.type] = None,\n  xcode_build_version: [None, str.type] = None,\n  xcode_version: [None, str.type] = None,\n  xctest: str.type\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-15"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_internal_platform_path"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_internal_sdk_path"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"actool"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"architecture"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"build_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"codesign"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"codesign_allocate"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"codesign_identities_command"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compile_resources_locally"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"copy_scene_kit_assets"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"developer_path"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"dsymutil"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"dwarfdump"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"ibtool"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"installer"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"libtool"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lipo"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"min_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"momc"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_path"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"requires_xcode_version_match"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"sdk_environment"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"sdk_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"sdk_path"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"swift_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"watch_kit_stub_binary"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"work_around_dsymutil_lto_stack_overflow_bug"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"xcode_build_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"xcode_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"xctest"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"apple_toolchain_override"},"apple_toolchain_override"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def apple_toolchain_override(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  base: str.type,\n  cxx_toolchain: str.type\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-16"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"base"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_toolchain"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"apple_toolchain_set"},"apple_toolchain_set"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def apple_toolchain_set(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  apple_toolchains: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-17"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"apple_toolchains"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"apple_tools"},"apple_tools"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def apple_tools(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  assemble_bundle: str.type,\n  info_plist_processor: str.type,\n  make_modulemap: str.type,\n  make_vfsoverlay: str.type,\n  swift_objc_header_postprocess: str.type\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-18"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"assemble_bundle"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"info_plist_processor"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"make_modulemap"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"make_vfsoverlay"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"swift_objc_header_postprocess"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"apple_watchos_bundle"},"apple_watchos_bundle"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def apple_watchos_bundle(**kwargs: UNKNOWN) -> UNKNOWN\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"attrs--unknown"},"attrs : ",(0,d.mdx)("inlineCode",{parentName:"h2"},"UNKNOWN")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"breakpoint"},"breakpoint"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def breakpoint() -> None\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"cgo_library"},"cgo_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def cgo_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _cxx_toolchain: default_only = None,\n  _go_toolchain: default_only = None,\n  cgo_compiler_flags: [str.type] = None,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  cxx_runtime_type: [None, str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  default_platform: [None, str.type] = None,\n  defaults: {str.type: str.type} = None,\n  deps: [str.type] = None,\n  deps_query: [None, str.type] = None,\n  devirt_enabled: bool.type = None,\n  embedcfg: [None, str.type] = None,\n  executable_name: [None, str.type] = None,\n  exported_deps: [str.type] = None,\n  fat_lto: bool.type = None,\n  focused_list_target: [None, str.type] = None,\n  frameworks: [str.type] = None,\n  go_assembler_flags: [str.type] = None,\n  go_compiler_flags: [str.type] = None,\n  go_srcs: [str.type] = None,\n  header_namespace: [None, str.type] = None,\n  headers: [{str.type: str.type}, [str.type]] = None,\n  headers_as_raw_headers_mode: [None, str.type] = None,\n  include_directories: [str.type] = None,\n  labels: [str.type] = None,\n  lang_compiler_flags: {str.type: [str.type]} = None,\n  lang_platform_compiler_flags: {str.type: [(str.type, [str.type])]} = None,\n  lang_platform_preprocessor_flags: {str.type: [(str.type, [str.type])]} = None,\n  lang_preprocessor_flags: {str.type: [str.type]} = None,\n  libraries: [str.type] = None,\n  licenses: [str.type] = None,\n  link_deps_query_whole: bool.type = None,\n  link_group: [None, str.type] = None,\n  link_group_map: [None, [(str.type, [(str.type, str.type, [None, str.type])])]] = None,\n  link_style: [None, str.type] = None,\n  linker_extra_outputs: [str.type] = None,\n  linker_flags: [str.type] = None,\n  package_name: [None, str.type] = None,\n  platform_compiler_flags: [(str.type, [str.type])] = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  platform_headers: [(str.type, [{str.type: str.type}, [str.type]])] = None,\n  platform_linker_flags: [(str.type, [str.type])] = None,\n  platform_preprocessor_flags: [(str.type, [str.type])] = None,\n  platform_srcs: [(str.type, [[str.type, (str.type, [str.type])]])] = None,\n  post_linker_flags: [str.type] = None,\n  post_platform_linker_flags: [(str.type, [str.type])] = None,\n  precompiled_header: [None, str.type] = None,\n  prefer_stripped_objects: bool.type = None,\n  prefix_header: [None, str.type] = None,\n  preprocessor_flags: [str.type] = None,\n  raw_headers: [str.type] = None,\n  srcs: [[str.type, (str.type, [str.type])]] = None,\n  thin_lto: bool.type = None,\n  version_universe: [None, str.type] = None,\n  weak_framework_names: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-19"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_go_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cgo_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_runtime_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"defaults"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps_query"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"devirt_enabled"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"embedcfg"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"executable_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"fat_lto"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"focused_list_target"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"frameworks"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"go_assembler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"go_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"go_srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"header_namespace"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"headers_as_raw_headers_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"include_directories"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_platform_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"libraries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_deps_query_whole"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_group"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_group_map"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_extra_outputs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"package_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"post_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"post_platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"precompiled_header"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"prefer_stripped_objects"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"prefix_header"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"raw_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"thin_lto"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"version_universe"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"weak_framework_names"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"cmd_args"},"cmd_args"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def cmd_args(*args: UNKNOWN, delimiter: [None, str.type] = None, format: [None, str.type] = None, prepend: [None, str.type] = None, quote: [None, str.type] = None) -> "cmd_args"\n')),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"command_alias"},"command_alias"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def command_alias(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _exec_os_type: default_only = None,\n  _find_and_replace_bat: default_only = None,\n  _target_os_type: default_only = None,\n  args: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  env: {str.type: str.type} = None,\n  exe: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  platform_exe: {str.type: str.type} = None,\n  resources: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-20"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_exec_os_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_find_and_replace_bat"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_target_os_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"args"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exe"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_exe"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"config_setting"},"config_setting"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def config_setting(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  constraint_values: [str.type] = None,\n  values: {str.type: str.type} = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-21"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"constraint_values"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"values"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"configured_alias"},"configured_alias"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def configured_alias(name: UNKNOWN, actual: UNKNOWN, platform: UNKNOWN, fallback_to_unconfigured_alias: UNKNOWN = False, **kwargs: UNKNOWN) -> UNKNOWN\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"constraint_setting"},"constraint_setting"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def constraint_setting(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-22"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"constraint_value"},"constraint_value"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def constraint_value(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  constraint_setting: str.type,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-23"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"constraint_setting"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"core_data_model"},"core_data_model"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def core_data_model(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  path: str.type,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-24"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"path"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"csharp_library"},"csharp_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def csharp_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [[str.type, str.type]] = None,\n  dll_name: str.type = None,\n  framework_ver: str.type,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  resources: {str.type: str.type} = None,\n  srcs: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-25"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"dll_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"framework_ver"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"cxx--unknown"},"cxx : ",(0,d.mdx)("inlineCode",{parentName:"h2"},"UNKNOWN")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"cxx_binary"},"cxx_binary"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def cxx_binary(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _cxx_hacks: str.type = None,\n  _cxx_toolchain: default_only = None,\n  allow_huge_dwp: bool.type = None,\n  auto_link_groups: bool.type = None,\n  binary_linker_flags: [str.type] = None,\n  bolt_flags: [str.type] = None,\n  bolt_gdb_index: [None, str.type] = None,\n  bolt_profile: [None, str.type] = None,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  cxx_runtime_type: [None, str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  default_platform: [None, str.type] = None,\n  defaults: {str.type: str.type} = None,\n  deps: [str.type] = None,\n  deps_query: [None, str.type] = None,\n  devirt_enabled: bool.type = None,\n  enable_distributed_thinlto: bool.type = None,\n  executable_name: [None, str.type] = None,\n  fat_lto: bool.type = None,\n  focused_list_target: [None, str.type] = None,\n  frameworks: [str.type] = None,\n  header_namespace: [None, str.type] = None,\n  headers: [{str.type: str.type}, [str.type]] = None,\n  headers_as_raw_headers_mode: [None, str.type] = None,\n  include_directories: [str.type] = None,\n  labels: [str.type] = None,\n  lang_compiler_flags: {str.type: [str.type]} = None,\n  lang_platform_compiler_flags: {str.type: [(str.type, [str.type])]} = None,\n  lang_platform_preprocessor_flags: {str.type: [(str.type, [str.type])]} = None,\n  lang_preprocessor_flags: {str.type: [str.type]} = None,\n  libraries: [str.type] = None,\n  licenses: [str.type] = None,\n  link_deps_query_whole: bool.type = None,\n  link_group: [None, str.type] = None,\n  link_group_map: [None, [str.type, [(str.type, [([None, str.type], str.type, [None, str.type], [None, str.type])])]]] = None,\n  link_style: [None, str.type] = None,\n  link_whole: default_only = None,\n  linker_extra_outputs: [str.type] = None,\n  linker_flags: [str.type] = None,\n  platform_compiler_flags: [(str.type, [str.type])] = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  platform_headers: [(str.type, [{str.type: str.type}, [str.type]])] = None,\n  platform_linker_flags: [(str.type, [str.type])] = None,\n  platform_preprocessor_flags: [(str.type, [str.type])] = None,\n  platform_srcs: [(str.type, [[str.type, (str.type, [str.type])]])] = None,\n  post_linker_flags: [str.type] = None,\n  post_platform_linker_flags: [(str.type, [str.type])] = None,\n  precompiled_header: [None, str.type] = None,\n  prefer_stripped_objects: bool.type = None,\n  prefix_header: [None, str.type] = None,\n  preprocessor_flags: [str.type] = None,\n  raw_headers: [str.type] = None,\n  resources: [{str.type: [str.type, str.type]}, [[str.type, str.type]]] = None,\n  srcs: [[str.type, (str.type, [str.type])]] = None,\n  thin_lto: bool.type = None,\n  version_universe: [None, str.type] = None,\n  weak_framework_names: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-26"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_hacks"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"allow_huge_dwp"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"auto_link_groups"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"binary_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bolt_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bolt_gdb_index"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bolt_profile"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_runtime_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"defaults"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps_query"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"devirt_enabled"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"enable_distributed_thinlto"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"executable_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"fat_lto"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"focused_list_target"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"frameworks"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"header_namespace"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"headers_as_raw_headers_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"include_directories"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_platform_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"libraries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_deps_query_whole"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_group"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_group_map"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_whole"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_extra_outputs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"post_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"post_platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"precompiled_header"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"prefer_stripped_objects"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"prefix_header"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"raw_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"thin_lto"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"version_universe"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"weak_framework_names"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"cxx_genrule"},"cxx_genrule"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def cxx_genrule(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _cxx_toolchain: default_only = None,\n  _exec_os_type: default_only = None,\n  _genrule_toolchain: default_only = None,\n  bash: [None, str.type] = None,\n  cacheable: [None, bool.type] = None,\n  cmd: [None, str.type] = None,\n  cmd_exe: [None, str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  default_outs: [None, [str.type]] = None,\n  enable_sandbox: [None, bool.type] = None,\n  environment_expansion_separator: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  need_android_tools: bool.type = None,\n  out: [None, str.type] = None,\n  outs: [None, {str.type: [str.type]}] = None,\n  remote: [None, bool.type] = None,\n  srcs: [{str.type: str.type}, [str.type]] = None,\n  type: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-27"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_exec_os_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_genrule_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bash"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cacheable"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cmd"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cmd_exe"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_outs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"enable_sandbox"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"environment_expansion_separator"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"need_android_tools"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"out"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"outs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"remote"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"cxx_library"},"cxx_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def cxx_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _cxx_hacks: default_only = None,\n  _cxx_toolchain: default_only = None,\n  _is_building_android_binary: default_only = None,\n  _omnibus_environment: [None, str.type] = None,\n  allow_huge_dwp: bool.type = None,\n  auto_link_groups: bool.type = None,\n  bridging_header: [None, str.type] = None,\n  can_be_asset: [None, bool.type] = None,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  cxx_runtime_type: [None, str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  default_platform: [None, str.type] = None,\n  defaults: {str.type: str.type} = None,\n  deps: [str.type] = None,\n  deps_query: [None, str.type] = None,\n  devirt_enabled: bool.type = None,\n  diagnostics: {str.type: str.type} = None,\n  executable_name: [None, str.type] = None,\n  exported_deps: [str.type] = None,\n  exported_header_style: str.type = None,\n  exported_headers: [{str.type: str.type}, [str.type]] = None,\n  exported_lang_platform_preprocessor_flags: {str.type: [(str.type, [str.type])]} = None,\n  exported_lang_preprocessor_flags: {str.type: [str.type]} = None,\n  exported_linker_flags: [str.type] = None,\n  exported_platform_deps: [(str.type, [str.type])] = None,\n  exported_platform_headers: [(str.type, [{str.type: str.type}, [str.type]])] = None,\n  exported_platform_linker_flags: [(str.type, [str.type])] = None,\n  exported_platform_preprocessor_flags: [(str.type, [str.type])] = None,\n  exported_post_linker_flags: [str.type] = None,\n  exported_post_platform_linker_flags: [(str.type, [str.type])] = None,\n  exported_preprocessor_flags: [str.type] = None,\n  extra_xcode_files: [str.type] = None,\n  extra_xcode_sources: [str.type] = None,\n  fat_lto: bool.type = None,\n  focused_list_target: [None, str.type] = None,\n  force_emit_omnibus_shared_root: bool.type = None,\n  force_static: [None, bool.type] = None,\n  frameworks: [str.type] = None,\n  header_namespace: [None, str.type] = None,\n  headers: [{str.type: str.type}, [str.type]] = None,\n  headers_as_raw_headers_mode: [None, str.type] = None,\n  include_directories: [str.type] = None,\n  include_in_android_merge_map_output: bool.type = None,\n  labels: [str.type] = None,\n  lang_compiler_flags: {str.type: [str.type]} = None,\n  lang_platform_compiler_flags: {str.type: [(str.type, [str.type])]} = None,\n  lang_platform_preprocessor_flags: {str.type: [(str.type, [str.type])]} = None,\n  lang_preprocessor_flags: {str.type: [str.type]} = None,\n  libraries: [str.type] = None,\n  licenses: [str.type] = None,\n  link_deps_query_whole: bool.type = None,\n  link_group: [None, str.type] = None,\n  link_group_map: [None, [str.type, [(str.type, [([None, str.type], str.type, [None, str.type], [None, str.type])])]]] = None,\n  link_style: [None, str.type] = None,\n  link_whole: [None, bool.type] = None,\n  linker_extra_outputs: [str.type] = None,\n  linker_flags: [str.type] = None,\n  module_name: [None, str.type] = None,\n  platform_compiler_flags: [(str.type, [str.type])] = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  platform_headers: [(str.type, [{str.type: str.type}, [str.type]])] = None,\n  platform_linker_flags: [(str.type, [str.type])] = None,\n  platform_preprocessor_flags: [(str.type, [str.type])] = None,\n  platform_srcs: [(str.type, [[str.type, (str.type, [str.type])]])] = None,\n  post_linker_flags: [str.type] = None,\n  post_platform_linker_flags: [(str.type, [str.type])] = None,\n  precompiled_header: [None, str.type] = None,\n  prefer_stripped_objects: bool.type = None,\n  preferred_linkage: str.type = None,\n  prefix_header: [None, str.type] = None,\n  preprocessor_flags: [str.type] = None,\n  public_include_directories: [str.type] = None,\n  public_system_include_directories: [str.type] = None,\n  raw_headers: [str.type] = None,\n  reexport_all_header_dependencies: [None, bool.type] = None,\n  resources: [{str.type: [str.type, str.type]}, [[str.type, str.type]]] = None,\n  sdk_modules: [str.type] = None,\n  soname: [None, str.type] = None,\n  srcs: [[str.type, (str.type, [str.type])]] = None,\n  static_library_basename: [None, str.type] = None,\n  supported_platforms_regex: [None, str.type] = None,\n  supports_merged_linking: [None, bool.type] = None,\n  supports_python_dlopen: [None, bool.type] = None,\n  thin_lto: bool.type = None,\n  use_archive: [None, bool.type] = None,\n  used_by_wrap_script: bool.type = None,\n  uses_cxx_explicit_modules: bool.type = None,\n  uses_explicit_modules: bool.type = None,\n  version_universe: [None, str.type] = None,\n  weak_framework_names: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None,\n  xcode_private_headers_symlinks: [None, bool.type] = None,\n  xcode_public_headers_symlinks: [None, bool.type] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-28"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_hacks"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_is_building_android_binary"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_omnibus_environment"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"allow_huge_dwp"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"auto_link_groups"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bridging_header"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"can_be_asset"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_runtime_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"defaults"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps_query"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"devirt_enabled"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"diagnostics"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"executable_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_header_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_lang_platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_lang_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_platform_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_post_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_post_platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_xcode_files"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_xcode_sources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"fat_lto"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"focused_list_target"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"force_emit_omnibus_shared_root"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"force_static"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"frameworks"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"header_namespace"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"headers_as_raw_headers_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"include_directories"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"include_in_android_merge_map_output"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_platform_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"libraries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_deps_query_whole"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_group"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_group_map"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_whole"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_extra_outputs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"module_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"post_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"post_platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"precompiled_header"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"prefer_stripped_objects"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preferred_linkage"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"prefix_header"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"public_include_directories"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"public_system_include_directories"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"raw_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"reexport_all_header_dependencies"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"sdk_modules"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"soname"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"static_library_basename"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"supported_platforms_regex"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"supports_merged_linking"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"supports_python_dlopen"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"thin_lto"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"use_archive"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"used_by_wrap_script"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"uses_cxx_explicit_modules"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"uses_explicit_modules"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"version_universe"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"weak_framework_names"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"xcode_private_headers_symlinks"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"xcode_public_headers_symlinks"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"cxx_lua_extension"},"cxx_lua_extension"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def cxx_lua_extension(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  base_module: [None, str.type] = None,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  cxx_runtime_type: [None, str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  default_platform: [None, str.type] = None,\n  defaults: {str.type: str.type} = None,\n  deps: [str.type] = None,\n  executable_name: [None, str.type] = None,\n  frameworks: [str.type] = None,\n  header_namespace: [None, str.type] = None,\n  headers: [{str.type: str.type}, [str.type]] = None,\n  headers_as_raw_headers_mode: [None, str.type] = None,\n  include_directories: [str.type] = None,\n  labels: [str.type] = None,\n  lang_compiler_flags: {str.type: [str.type]} = None,\n  lang_platform_compiler_flags: {str.type: [(str.type, [str.type])]} = None,\n  lang_platform_preprocessor_flags: {str.type: [(str.type, [str.type])]} = None,\n  lang_preprocessor_flags: {str.type: [str.type]} = None,\n  libraries: [str.type] = None,\n  licenses: [str.type] = None,\n  linker_extra_outputs: [str.type] = None,\n  linker_flags: [str.type] = None,\n  platform_compiler_flags: [(str.type, [str.type])] = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  platform_headers: [(str.type, [{str.type: str.type}, [str.type]])] = None,\n  platform_linker_flags: [(str.type, [str.type])] = None,\n  platform_preprocessor_flags: [(str.type, [str.type])] = None,\n  platform_srcs: [(str.type, [[str.type, (str.type, [str.type])]])] = None,\n  post_linker_flags: [str.type] = None,\n  post_platform_linker_flags: [(str.type, [str.type])] = None,\n  precompiled_header: [None, str.type] = None,\n  prefix_header: [None, str.type] = None,\n  preprocessor_flags: [str.type] = None,\n  raw_headers: [str.type] = None,\n  srcs: [[str.type, (str.type, [str.type])]] = None,\n  version_universe: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-29"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"base_module"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_runtime_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"defaults"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"executable_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"frameworks"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"header_namespace"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"headers_as_raw_headers_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"include_directories"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_platform_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"libraries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_extra_outputs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"post_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"post_platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"precompiled_header"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"prefix_header"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"raw_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"version_universe"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"cxx_precompiled_header"},"cxx_precompiled_header"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def cxx_precompiled_header(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  src: str.type,\n  version_universe: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-30"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"src"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"version_universe"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"cxx_python_extension"},"cxx_python_extension"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def cxx_python_extension(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _cxx_hacks: default_only = None,\n  _cxx_toolchain: default_only = None,\n  _omnibus_environment: [None, str.type] = None,\n  _python_toolchain: default_only = None,\n  allow_embedding: bool.type = None,\n  allow_huge_dwp: bool.type = None,\n  allow_suffixing: bool.type = None,\n  auto_link_groups: bool.type = None,\n  base_module: [None, str.type] = None,\n  bridging_header: default_only = None,\n  can_be_asset: default_only = None,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  cxx_runtime_type: [None, str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  default_platform: [None, str.type] = None,\n  defaults: {str.type: str.type} = None,\n  deps: [str.type] = None,\n  devirt_enabled: default_only = None,\n  diagnostics: default_only = None,\n  executable_name: [None, str.type] = None,\n  exported_deps: default_only = None,\n  exported_header_style: default_only = None,\n  exported_headers: default_only = None,\n  exported_lang_platform_preprocessor_flags: default_only = None,\n  exported_lang_preprocessor_flags: default_only = None,\n  exported_linker_flags: default_only = None,\n  exported_platform_deps: default_only = None,\n  exported_platform_headers: default_only = None,\n  exported_platform_linker_flags: default_only = None,\n  exported_platform_preprocessor_flags: default_only = None,\n  exported_post_linker_flags: default_only = None,\n  exported_post_platform_linker_flags: default_only = None,\n  exported_preprocessor_flags: default_only = None,\n  extra_xcode_files: default_only = None,\n  extra_xcode_sources: default_only = None,\n  fat_lto: default_only = None,\n  focused_list_target: default_only = None,\n  force_static: default_only = None,\n  frameworks: [str.type] = None,\n  header_namespace: [None, str.type] = None,\n  headers: [{str.type: str.type}, [str.type]] = None,\n  headers_as_raw_headers_mode: [None, str.type] = None,\n  include_directories: [str.type] = None,\n  include_in_android_merge_map_output: default_only = None,\n  labels: [str.type] = None,\n  lang_compiler_flags: {str.type: [str.type]} = None,\n  lang_platform_compiler_flags: {str.type: [(str.type, [str.type])]} = None,\n  lang_platform_preprocessor_flags: {str.type: [(str.type, [str.type])]} = None,\n  lang_preprocessor_flags: {str.type: [str.type]} = None,\n  libraries: [str.type] = None,\n  licenses: [str.type] = None,\n  link_group: default_only = None,\n  link_group_map: default_only = None,\n  link_style: [None, str.type] = None,\n  link_whole: default_only = None,\n  linker_extra_outputs: [str.type] = None,\n  linker_flags: [str.type] = None,\n  module_name: [None, str.type] = None,\n  platform_compiler_flags: [(str.type, [str.type])] = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  platform_headers: [(str.type, [{str.type: str.type}, [str.type]])] = None,\n  platform_linker_flags: [(str.type, [str.type])] = None,\n  platform_preprocessor_flags: [(str.type, [str.type])] = None,\n  platform_srcs: [(str.type, [[str.type, (str.type, [str.type])]])] = None,\n  post_linker_flags: [str.type] = None,\n  post_platform_linker_flags: [(str.type, [str.type])] = None,\n  precompiled_header: [None, str.type] = None,\n  preferred_linkage: default_only = None,\n  prefix_header: [None, str.type] = None,\n  preprocessor_flags: [str.type] = None,\n  public_include_directories: default_only = None,\n  public_system_include_directories: default_only = None,\n  raw_headers: [str.type] = None,\n  reexport_all_header_dependencies: default_only = None,\n  resources: default_only = None,\n  sdk_modules: default_only = None,\n  soname: default_only = None,\n  srcs: [[str.type, (str.type, [str.type])]] = None,\n  static_library_basename: default_only = None,\n  suffix_all: bool.type = None,\n  supported_platforms_regex: default_only = None,\n  supports_merged_linking: default_only = None,\n  thin_lto: default_only = None,\n  type_stub: [None, str.type] = None,\n  use_archive: default_only = None,\n  used_by_wrap_script: default_only = None,\n  uses_cxx_explicit_modules: default_only = None,\n  uses_explicit_modules: default_only = None,\n  version_universe: [None, str.type] = None,\n  weak_framework_names: default_only = None,\n  within_view: [None, [None, [str.type]]] = None,\n  xcode_private_headers_symlinks: default_only = None,\n  xcode_public_headers_symlinks: default_only = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-31"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_hacks"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_omnibus_environment"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_python_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"allow_embedding"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"allow_huge_dwp"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"allow_suffixing"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"auto_link_groups"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"base_module"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bridging_header"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"can_be_asset"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_runtime_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"defaults"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"devirt_enabled"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"diagnostics"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"executable_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_header_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_lang_platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_lang_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_platform_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_post_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_post_platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_xcode_files"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_xcode_sources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"fat_lto"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"focused_list_target"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"force_static"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"frameworks"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"header_namespace"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"headers_as_raw_headers_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"include_directories"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"include_in_android_merge_map_output"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_platform_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"libraries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_group"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_group_map"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_whole"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_extra_outputs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"module_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"post_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"post_platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"precompiled_header"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preferred_linkage"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"prefix_header"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"public_include_directories"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"public_system_include_directories"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"raw_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"reexport_all_header_dependencies"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"sdk_modules"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"soname"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"static_library_basename"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"suffix_all"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"supported_platforms_regex"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"supports_merged_linking"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"thin_lto"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"type_stub"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"use_archive"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"used_by_wrap_script"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"uses_cxx_explicit_modules"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"uses_explicit_modules"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"version_universe"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"weak_framework_names"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"xcode_private_headers_symlinks"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"xcode_public_headers_symlinks"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"cxx_test"},"cxx_test"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def cxx_test(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _cxx_hacks: str.type = None,\n  _cxx_toolchain: default_only = None,\n  _inject_test_env: default_only = None,\n  additional_coverage_targets: [str.type] = None,\n  allow_huge_dwp: bool.type = None,\n  args: [str.type] = None,\n  auto_link_groups: bool.type = None,\n  binary_linker_flags: [str.type] = None,\n  bolt_flags: [str.type] = None,\n  bolt_gdb_index: [None, str.type] = None,\n  bolt_profile: [None, str.type] = None,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  cxx_runtime_type: [None, str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  default_platform: [None, str.type] = None,\n  defaults: {str.type: str.type} = None,\n  deps: [str.type] = None,\n  deps_query: [None, str.type] = None,\n  devirt_enabled: bool.type = None,\n  enable_distributed_thinlto: bool.type = None,\n  env: {str.type: str.type} = None,\n  executable_name: [None, str.type] = None,\n  fat_lto: bool.type = None,\n  focused_list_target: [None, str.type] = None,\n  framework: [None, str.type] = None,\n  frameworks: [str.type] = None,\n  header_namespace: [None, str.type] = None,\n  headers: [{str.type: str.type}, [str.type]] = None,\n  headers_as_raw_headers_mode: [None, str.type] = None,\n  include_directories: [str.type] = None,\n  labels: [str.type] = None,\n  lang_compiler_flags: {str.type: [str.type]} = None,\n  lang_platform_compiler_flags: {str.type: [(str.type, [str.type])]} = None,\n  lang_platform_preprocessor_flags: {str.type: [(str.type, [str.type])]} = None,\n  lang_preprocessor_flags: {str.type: [str.type]} = None,\n  libraries: [str.type] = None,\n  licenses: [str.type] = None,\n  link_deps_query_whole: bool.type = None,\n  link_group: [None, str.type] = None,\n  link_group_map: [None, [str.type, [(str.type, [([None, str.type], str.type, [None, str.type], [None, str.type])])]]] = None,\n  link_style: [None, str.type] = None,\n  link_whole: default_only = None,\n  linker_extra_outputs: [str.type] = None,\n  linker_flags: [str.type] = None,\n  platform_compiler_flags: [(str.type, [str.type])] = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  platform_headers: [(str.type, [{str.type: str.type}, [str.type]])] = None,\n  platform_linker_flags: [(str.type, [str.type])] = None,\n  platform_preprocessor_flags: [(str.type, [str.type])] = None,\n  platform_srcs: [(str.type, [[str.type, (str.type, [str.type])]])] = None,\n  post_linker_flags: [str.type] = None,\n  post_platform_linker_flags: [(str.type, [str.type])] = None,\n  precompiled_header: [None, str.type] = None,\n  prefer_stripped_objects: bool.type = None,\n  prefix_header: [None, str.type] = None,\n  preprocessor_flags: [str.type] = None,\n  raw_headers: [str.type] = None,\n  remote_execution: [None, {str.type: str.type}] = None,\n  resources: [{str.type: [str.type, str.type]}, [[str.type, str.type]]] = None,\n  run_test_separately: [None, bool.type] = None,\n  srcs: [[str.type, (str.type, [str.type])]] = None,\n  test_rule_timeout_ms: [None, int.type] = None,\n  thin_lto: bool.type = None,\n  use_default_test_main: [None, bool.type] = None,\n  version_universe: [None, str.type] = None,\n  weak_framework_names: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-32"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_hacks"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_inject_test_env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"additional_coverage_targets"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"allow_huge_dwp"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"args"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"auto_link_groups"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"binary_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bolt_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bolt_gdb_index"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bolt_profile"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_runtime_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"defaults"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps_query"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"devirt_enabled"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"enable_distributed_thinlto"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"executable_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"fat_lto"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"focused_list_target"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"framework"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"frameworks"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"header_namespace"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"headers_as_raw_headers_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"include_directories"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_platform_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"libraries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_deps_query_whole"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_group"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_group_map"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_whole"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_extra_outputs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"post_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"post_platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"precompiled_header"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"prefer_stripped_objects"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"prefix_header"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"raw_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"remote_execution"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"run_test_separately"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_rule_timeout_ms"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"thin_lto"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"use_default_test_main"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"version_universe"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"weak_framework_names"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"cxx_toolchain"},"cxx_toolchain"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def cxx_toolchain(inherit_target_platform: UNKNOWN = False, **kwargs: UNKNOWN) -> UNKNOWN\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"d_binary"},"d_binary"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def d_binary(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  linker_flags: [str.type] = None,\n  srcs: [{str.type: str.type}, [str.type]] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-33"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"d_library"},"d_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def d_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  linker_flags: [str.type] = None,\n  srcs: [{str.type: str.type}, [str.type]] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-34"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"d_test"},"d_test"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def d_test(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  linker_flags: [str.type] = None,\n  srcs: [{str.type: str.type}, [str.type]] = None,\n  test_rule_timeout_ms: [None, int.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-35"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_rule_timeout_ms"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"debug"},"debug"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def debug(val: "") -> str.type\n')),(0,d.mdx)("p",null,"Print the value with full debug formatting. The result may not be stable over time, mostly intended for debugging purposes."),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"enum"},"enum"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def enum(*args: UNKNOWN) -> ""\n')),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"erlang_app"},"erlang_app"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def erlang_app(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _toolchain: str.type = None,\n  app_src: [None, str.type] = None,\n  applications: [str.type] = None,\n  build_edoc_chunks: bool.type = None,\n  contacts: [str.type] = None,\n  erl_opts: [None, [str.type]] = None,\n  extra_includes: [str.type] = None,\n  included_applications: [str.type] = None,\n  includes: [str.type] = None,\n  labels: [str.type] = None,\n  mod: [None, (str.type, [str.type])] = None,\n  resources: [str.type] = None,\n  shell_configs: [str.type] = None,\n  shell_libs: [str.type] = None,\n  srcs: [str.type] = None,\n  use_global_parse_transforms: bool.type = None,\n  version: str.type = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-36"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"app_src"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"applications"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"build_edoc_chunks"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"erl_opts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_includes"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"included_applications"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"includes"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"mod"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"shell_configs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"shell_libs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"use_global_parse_transforms"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"version"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"erlang_app_includes"},"erlang_app_includes"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def erlang_app_includes(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _toolchain: str.type = None,\n  application_name: str.type,\n  contacts: [str.type] = None,\n  includes: [str.type] = None,\n  labels: [str.type] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-37"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"application_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"includes"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"erlang_application"},"erlang_application"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def erlang_application(**kwargs: UNKNOWN) -> UNKNOWN\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"erlang_escript"},"erlang_escript"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def erlang_escript(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _toolchain: str.type = None,\n  contacts: [str.type] = None,\n  deps: [str.type],\n  emu_args: [str.type] = None,\n  include_priv: bool.type = None,\n  labels: [str.type] = None,\n  main_module: [None, str.type] = None,\n  resources: [str.type] = None,\n  script_name: [None, str.type] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-38"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"emu_args"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"include_priv"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"main_module"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"script_name"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"erlang_otp_binaries"},"erlang_otp_binaries"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def erlang_otp_binaries(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  erl: str.type,\n  erlc: str.type,\n  escript: str.type,\n  labels: [str.type] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-39"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"erl"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"erlc"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"escript"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"erlang_rebar3_interface"},"erlang_rebar3_interface"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def erlang_rebar3_interface(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  deps: [str.type] = None,\n  labels: [str.type] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-40"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"erlang_release"},"erlang_release"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def erlang_release(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _toolchain: str.type = None,\n  applications: [[str.type, (str.type, str.type)]],\n  contacts: [str.type] = None,\n  include_erts: bool.type = None,\n  labels: [str.type] = None,\n  multi_toolchain: [None, [str.type]] = None,\n  overlays: {str.type: [str.type]} = None,\n  release_name: [None, str.type] = None,\n  version: str.type = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-41"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"applications"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"include_erts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"multi_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"overlays"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"release_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"version"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"erlang_test"},"erlang_test"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def erlang_test(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _cli_lib: str.type = None,\n  _ct_opts: str.type = None,\n  _providers: str.type,\n  _test_binary: str.type = None,\n  _test_binary_lib: str.type = None,\n  _toolchain: str.type = None,\n  _trampoline: [None, str.type] = None,\n  config_files: [str.type] = None,\n  contacts: [str.type] = None,\n  deps: [str.type] = None,\n  env: {str.type: str.type} = None,\n  extra_ct_hooks: [str.type] = None,\n  labels: [str.type] = None,\n  property_tests: [str.type] = None,\n  resources: [str.type] = None,\n  shell_configs: [str.type] = None,\n  shell_libs: [str.type] = None,\n  suite: str.type\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-42"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cli_lib"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_ct_opts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_providers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_test_binary"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_test_binary_lib"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_trampoline"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"config_files"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_ct_hooks"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"property_tests"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"shell_configs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"shell_libs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"suite"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"erlang_tests"},"erlang_tests"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def erlang_tests(**kwargs: UNKNOWN) -> UNKNOWN\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"experimental_regex"},"experimental_regex"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def experimental_regex(regex: str.type) -> "regex"\n')),(0,d.mdx)("p",null,"Creates a regex which can be used for matching"),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"export_file"},"export_file"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def export_file(name: UNKNOWN, src: UNKNOWN = None, **kwargs: UNKNOWN) -> UNKNOWN\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"external_test_runner"},"external_test_runner"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def external_test_runner(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  binary: str.type,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-43"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"binary"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"extract_archive"},"extract_archive"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def extract_archive(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contents_archive: str.type,\n  directory_name: [None, str.type] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-44"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contents_archive"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"directory_name"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"field"},"field"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def field(typ: "", default: [None, ""] = None) -> "field"\n')),(0,d.mdx)("p",null,"Creates a field record."),(0,d.mdx)("h3",{id:"details"},"Details"),(0,d.mdx)("p",null,"Examples:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre"},'rec_type = record(host=field(str.type), port=field(int.type), mask=field(int.type, default=255))\nrec = rec_type(host="localhost", port=80)\nrec.port == 80\nrec.mask == 255\n')),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"filegroup"},"filegroup"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def filegroup(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  copy: bool.type = None,\n  default_host_platform: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  srcs: [{str.type: str.type}, [str.type]] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-45"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"copy"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"filter"},"filter"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def filter(func: "", seq: iter("")) -> [""]\n')),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"gen_aidl"},"gen_aidl"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def gen_aidl(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _android_toolchain: str.type = None,\n  _java_toolchain: str.type = None,\n  aidl: str.type,\n  aidl_srcs: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  import_path: str.type = None,\n  import_paths: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-46"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_android_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_java_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"aidl"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"aidl_srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"import_path"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"import_paths"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"genrule"},"genrule"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def genrule(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _exec_os_type: default_only = None,\n  _genrule_toolchain: default_only = None,\n  bash: [None, str.type] = None,\n  cacheable: [None, bool.type] = None,\n  cmd: [None, str.type] = None,\n  cmd_exe: [None, str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  default_outs: [None, [str.type]] = None,\n  enable_sandbox: [None, bool.type] = None,\n  env: {str.type: str.type} = None,\n  environment_expansion_separator: [None, str.type] = None,\n  executable: [None, bool.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  need_android_tools: bool.type = None,\n  out: [None, str.type] = None,\n  outs: [None, {str.type: [str.type]}] = None,\n  remote: [None, bool.type] = None,\n  srcs: [{str.type: str.type}, [str.type]] = None,\n  type: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-47"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_exec_os_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_genrule_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bash"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cacheable"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cmd"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cmd_exe"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_outs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"enable_sandbox"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"environment_expansion_separator"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"executable"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"need_android_tools"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"out"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"outs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"remote"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"get_base_path"},"get_base_path"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def get_base_path() -> str.type\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"get_cell_name"},"get_cell_name"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def get_cell_name() -> str.type\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"glob"},"glob"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def glob(include: [str.type], *, exclude: [None, [str.type]] = None) -> ""\n')),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"go_binary"},"go_binary"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def go_binary(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _go_toolchain: default_only = None,\n  assembler_flags: [str.type] = None,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  embedcfg: [None, str.type] = None,\n  external_linker_flags: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  link_mode: [None, str.type] = None,\n  link_style: [None, str.type] = None,\n  linker_flags: [str.type] = None,\n  platform: [None, str.type] = None,\n  platform_external_linker_flags: [(str.type, [str.type])] = None,\n  resources: [[str.type, str.type]] = None,\n  srcs: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-48"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_go_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"assembler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"embedcfg"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"external_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_external_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"go_exported_library"},"go_exported_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def go_exported_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  assembler_flags: [str.type] = None,\n  build_mode: str.type,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  external_linker_flags: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  link_mode: [None, str.type] = None,\n  link_style: [None, str.type] = None,\n  linker_flags: [str.type] = None,\n  platform: [None, str.type] = None,\n  platform_external_linker_flags: [(str.type, [str.type])] = None,\n  resources: [str.type] = None,\n  srcs: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-49"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"assembler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"build_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"external_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_external_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"go_library"},"go_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def go_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _go_toolchain: default_only = None,\n  assembler_flags: [str.type] = None,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  embedcfg: [None, str.type] = None,\n  exported_deps: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  package_name: [None, str.type] = None,\n  srcs: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-50"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_go_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"assembler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"embedcfg"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"package_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"go_test"},"go_test"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def go_test(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _go_toolchain: default_only = None,\n  _inject_test_env: default_only = None,\n  _testmaingen: default_only = None,\n  assembler_flags: [str.type] = None,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  coverage_mode: [None, str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  embedcfg: [None, str.type] = None,\n  env: {str.type: str.type} = None,\n  external_linker_flags: [str.type] = None,\n  labels: [str.type] = None,\n  library: [None, str.type] = None,\n  licenses: [str.type] = None,\n  link_mode: [None, str.type] = None,\n  link_style: [None, str.type] = None,\n  linker_flags: [str.type] = None,\n  package_name: [None, str.type] = None,\n  platform: [None, str.type] = None,\n  resources: [str.type] = None,\n  run_test_separately: bool.type = None,\n  runner: [None, str.type] = None,\n  specs: [None, str.type] = None,\n  srcs: [str.type] = None,\n  test_rule_timeout_ms: [None, int.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-51"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_go_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_inject_test_env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_testmaingen"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"assembler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"coverage_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"embedcfg"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"external_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"library"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"package_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"run_test_separately"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"runner"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"specs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_rule_timeout_ms"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"go_test_runner"},"go_test_runner"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def go_test_runner(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  test_runner_generator: str.type,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-52"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_runner_generator"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"groovy_library"},"groovy_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def groovy_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  annotation_processor_deps: [str.type] = None,\n  annotation_processor_params: [str.type] = None,\n  annotation_processors: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  exported_deps: [str.type] = None,\n  exported_provided_deps: [str.type] = None,\n  extra_arguments: [str.type] = None,\n  extra_groovyc_arguments: [str.type] = None,\n  java_version: [None, str.type] = None,\n  javac: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  manifest_file: [None, str.type] = None,\n  maven_coords: [None, str.type] = None,\n  never_mark_as_unused_dependency: [None, bool.type] = None,\n  on_unused_dependencies: [None, str.type] = None,\n  plugins: [str.type] = None,\n  proguard_config: [None, str.type] = None,\n  provided_deps: [str.type] = None,\n  remove_classes: [str.type] = None,\n  required_for_source_only_abi: bool.type = None,\n  resources: [str.type] = None,\n  resources_root: [None, str.type] = None,\n  runtime_deps: [str.type] = None,\n  source: [None, str.type] = None,\n  source_abi_verification_mode: [None, str.type] = None,\n  source_only_abi_deps: [str.type] = None,\n  srcs: [str.type] = None,\n  target: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-53"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_params"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processors"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_arguments"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_groovyc_arguments"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"java_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"javac"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest_file"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"maven_coords"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"never_mark_as_unused_dependency"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"on_unused_dependencies"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"plugins"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"proguard_config"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"remove_classes"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"required_for_source_only_abi"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources_root"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"runtime_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_abi_verification_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_only_abi_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"groovy_test"},"groovy_test"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def groovy_test(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  annotation_processor_deps: [str.type] = None,\n  annotation_processor_params: [str.type] = None,\n  annotation_processors: [str.type] = None,\n  contacts: [str.type] = None,\n  cxx_library_whitelist: [str.type] = None,\n  default_cxx_platform: [None, str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  deps_query: [None, str.type] = None,\n  env: {str.type: str.type} = None,\n  exported_deps: [str.type] = None,\n  exported_provided_deps: [str.type] = None,\n  extra_arguments: [str.type] = None,\n  extra_groovyc_arguments: [str.type] = None,\n  fork_mode: str.type = None,\n  java_version: [None, str.type] = None,\n  javac: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  manifest_file: [None, str.type] = None,\n  maven_coords: [None, str.type] = None,\n  never_mark_as_unused_dependency: [None, bool.type] = None,\n  on_unused_dependencies: [None, str.type] = None,\n  plugins: [str.type] = None,\n  proguard_config: [None, str.type] = None,\n  provided_deps: [str.type] = None,\n  remove_classes: [str.type] = None,\n  required_for_source_only_abi: bool.type = None,\n  resources: [str.type] = None,\n  resources_root: [None, str.type] = None,\n  run_test_separately: bool.type = None,\n  runtime_deps: [str.type] = None,\n  source: [None, str.type] = None,\n  source_abi_verification_mode: [None, str.type] = None,\n  source_only_abi_deps: [str.type] = None,\n  srcs: [str.type] = None,\n  std_err_log_level: [None, [str.type, int.type]] = None,\n  std_out_log_level: [None, [str.type, int.type]] = None,\n  target: [None, str.type] = None,\n  test_case_timeout_ms: [None, int.type] = None,\n  test_rule_timeout_ms: [None, int.type] = None,\n  test_type: [None, str.type] = None,\n  use_cxx_libraries: [None, bool.type] = None,\n  use_dependency_order_classpath: [None, bool.type] = None,\n  vm_args: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-54"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_params"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processors"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_library_whitelist"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_cxx_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps_query"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_arguments"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_groovyc_arguments"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"fork_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"java_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"javac"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest_file"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"maven_coords"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"never_mark_as_unused_dependency"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"on_unused_dependencies"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"plugins"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"proguard_config"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"remove_classes"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"required_for_source_only_abi"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources_root"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"run_test_separately"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"runtime_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_abi_verification_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_only_abi_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"std_err_log_level"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"std_out_log_level"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_case_timeout_ms"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_rule_timeout_ms"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"use_cxx_libraries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"use_dependency_order_classpath"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"vm_args"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"gwt_binary"},"gwt_binary"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def gwt_binary(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  draft_compile: [None, bool.type] = None,\n  experimental_args: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  local_workers: [None, int.type] = None,\n  module_deps: [str.type] = None,\n  modules: [str.type] = None,\n  optimize: [None, int.type] = None,\n  strict: [None, bool.type] = None,\n  style: [None, str.type] = None,\n  vm_args: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-55"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"draft_compile"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"experimental_args"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"local_workers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"module_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"modules"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"optimize"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"strict"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"vm_args"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"halide_library"},"halide_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def halide_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  compiler_deps: [str.type] = None,\n  compiler_flags: [str.type] = None,\n  compiler_invocation_flags: [str.type] = None,\n  configs: {str.type: {str.type: str.type}} = None,\n  contacts: [str.type] = None,\n  cxx_runtime_type: [None, str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  default_platform: [None, str.type] = None,\n  defaults: {str.type: str.type} = None,\n  deps: [str.type] = None,\n  deps_query: [None, str.type] = None,\n  devirt_enabled: bool.type = None,\n  executable_name: [None, str.type] = None,\n  fat_lto: bool.type = None,\n  focused_list_target: [None, str.type] = None,\n  frameworks: [str.type] = None,\n  function_name: [None, str.type] = None,\n  header_namespace: [None, str.type] = None,\n  headers: [{str.type: str.type}, [str.type]] = None,\n  headers_as_raw_headers_mode: [None, str.type] = None,\n  include_directories: [str.type] = None,\n  labels: [str.type] = None,\n  lang_compiler_flags: {str.type: [str.type]} = None,\n  lang_platform_compiler_flags: {str.type: [(str.type, [str.type])]} = None,\n  lang_platform_preprocessor_flags: {str.type: [(str.type, [str.type])]} = None,\n  lang_preprocessor_flags: {str.type: [str.type]} = None,\n  libraries: [str.type] = None,\n  licenses: [str.type] = None,\n  link_deps_query_whole: bool.type = None,\n  link_group: [None, str.type] = None,\n  link_group_map: [None, [(str.type, [(str.type, str.type, [None, str.type])])]] = None,\n  link_style: [None, str.type] = None,\n  linker_extra_outputs: [str.type] = None,\n  linker_flags: [str.type] = None,\n  platform_compiler_flags: [(str.type, [str.type])] = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  platform_headers: [(str.type, [{str.type: str.type}, [str.type]])] = None,\n  platform_linker_flags: [(str.type, [str.type])] = None,\n  platform_preprocessor_flags: [(str.type, [str.type])] = None,\n  platform_srcs: [(str.type, [[str.type, (str.type, [str.type])]])] = None,\n  post_linker_flags: [str.type] = None,\n  post_platform_linker_flags: [(str.type, [str.type])] = None,\n  precompiled_header: [None, str.type] = None,\n  prefer_stripped_objects: bool.type = None,\n  prefix_header: [None, str.type] = None,\n  preprocessor_flags: [str.type] = None,\n  raw_headers: [str.type] = None,\n  srcs: [[str.type, (str.type, [str.type])]] = None,\n  supported_platforms_regex: [None, str.type] = None,\n  thin_lto: bool.type = None,\n  version_universe: [None, str.type] = None,\n  weak_framework_names: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-56"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_invocation_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"configs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_runtime_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"defaults"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps_query"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"devirt_enabled"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"executable_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"fat_lto"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"focused_list_target"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"frameworks"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"function_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"header_namespace"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"headers_as_raw_headers_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"include_directories"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_platform_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"libraries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_deps_query_whole"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_group"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_group_map"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_extra_outputs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"post_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"post_platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"precompiled_header"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"prefer_stripped_objects"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"prefix_header"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"raw_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"supported_platforms_regex"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"thin_lto"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"version_universe"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"weak_framework_names"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"haskell_binary"},"haskell_binary"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def haskell_binary(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _cxx_toolchain: default_only = None,\n  _haskell_toolchain: default_only = None,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  deps_query: [None, str.type] = None,\n  enable_profiling: bool.type = None,\n  ghci_platform_preload_deps: [(str.type, [str.type])] = None,\n  ghci_preload_deps: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  link_deps_query_whole: bool.type = None,\n  link_style: [None, str.type] = None,\n  linker_flags: [str.type] = None,\n  main: [None, str.type] = None,\n  platform: [None, str.type] = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  platform_linker_flags: [(str.type, [str.type])] = None,\n  srcs: [{str.type: str.type}, [str.type]] = None,\n  template_deps: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-57"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_haskell_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps_query"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"enable_profiling"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"ghci_platform_preload_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"ghci_preload_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_deps_query_whole"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"main"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"template_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"haskell_ghci"},"haskell_ghci"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def haskell_ghci(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  deps_query: [None, str.type] = None,\n  enable_profiling: bool.type = None,\n  extra_script_templates: [str.type] = None,\n  ghci_bin_dep: [None, str.type] = None,\n  ghci_init: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  linker_flags: [str.type] = None,\n  platform: [None, str.type] = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  platform_preload_deps: [(str.type, [str.type])] = None,\n  preload_deps: [str.type] = None,\n  srcs: [{str.type: str.type}, [str.type]] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-58"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps_query"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"enable_profiling"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_script_templates"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"ghci_bin_dep"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"ghci_init"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_preload_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preload_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"haskell_haddock"},"haskell_haddock"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def haskell_haddock(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  deps_query: [None, str.type] = None,\n  haddock_flags: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  platform: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-59"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps_query"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"haddock_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"haskell_ide"},"haskell_ide"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def haskell_ide(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _haskell_toolchain: default_only = None,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  deps_query: [None, str.type] = None,\n  extra_script_templates: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  link_style: str.type,\n  linker_flags: [str.type] = None,\n  platform: [None, str.type] = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  srcs: [{str.type: str.type}, [str.type]] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-60"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_haskell_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps_query"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_script_templates"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"haskell_library"},"haskell_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def haskell_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _cxx_toolchain: default_only = None,\n  _haskell_toolchain: default_only = None,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  enable_profiling: bool.type = None,\n  ghci_platform_preload_deps: [(str.type, [str.type])] = None,\n  ghci_preload_deps: [str.type] = None,\n  haddock_flags: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  link_whole: bool.type = None,\n  linker_flags: [str.type] = None,\n  platform: [None, str.type] = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  platform_linker_flags: [(str.type, [str.type])] = None,\n  preferred_linkage: str.type = None,\n  srcs: [{str.type: str.type}, [str.type]] = None,\n  template_deps: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-61"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_haskell_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"enable_profiling"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"ghci_platform_preload_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"ghci_preload_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"haddock_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_whole"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preferred_linkage"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"template_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"haskell_prebuilt_library"},"haskell_prebuilt_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def haskell_prebuilt_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  cxx_header_dirs: [str.type] = None,\n  db: str.type,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  enable_profiling: bool.type = None,\n  exported_compiler_flags: [str.type] = None,\n  exported_linker_flags: [str.type] = None,\n  id: str.type = None,\n  import_dirs: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  pic_profiled_static_libs: [str.type] = None,\n  pic_static_libs: [str.type] = None,\n  profiled_static_libs: [str.type] = None,\n  shared_libs: {str.type: str.type} = None,\n  static_libs: [str.type] = None,\n  version: str.type = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-62"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_header_dirs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"db"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"enable_profiling"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"id"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"import_dirs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"pic_profiled_static_libs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"pic_static_libs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"profiled_static_libs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"shared_libs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"static_libs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"host_info"},"host_info"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def host_info() -> ""\n')),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"http_archive"},"http_archive"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def http_archive(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _create_exclusion_list: default_only = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  excludes: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  out: [None, str.type] = None,\n  sha1: [None, str.type] = None,\n  sha256: [None, str.type] = None,\n  strip_prefix: [None, str.type] = None,\n  type: [None, str.type] = None,\n  urls: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-63"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_create_exclusion_list"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"excludes"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"out"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"sha1"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"sha256"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"strip_prefix"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"urls"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"http_file"},"http_file"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def http_file(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  executable: [None, bool.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  out: [None, str.type] = None,\n  sha1: [None, str.type] = None,\n  sha256: [None, str.type] = None,\n  urls: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-64"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"executable"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"out"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"sha1"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"sha256"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"urls"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"implicit_package_symbol"},"implicit_package_symbol"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def implicit_package_symbol(name: str.type, default: [None, ""] = None) -> ""\n')),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"jar_genrule"},"jar_genrule"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def jar_genrule(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _genrule_toolchain: default_only = None,\n  _java_toolchain: str.type = None,\n  bash: [None, str.type] = None,\n  cacheable: [None, bool.type] = None,\n  cmd: [None, str.type] = None,\n  cmd_exe: [None, str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  enable_sandbox: [None, bool.type] = None,\n  environment_expansion_separator: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  need_android_tools: bool.type = None,\n  remote: [None, bool.type] = None,\n  srcs: [{str.type: str.type}, [str.type]] = None,\n  type: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-65"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_genrule_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_java_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bash"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cacheable"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cmd"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cmd_exe"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"enable_sandbox"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"environment_expansion_separator"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"need_android_tools"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"remote"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"java_annotation_processor"},"java_annotation_processor"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def java_annotation_processor(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _build_only_native_code: default_only = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  does_not_affect_abi: bool.type = None,\n  isolate_class_loader: bool.type = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  processor_class: str.type = None,\n  supports_abi_generation_from_source: bool.type = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-66"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_build_only_native_code"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"does_not_affect_abi"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"isolate_class_loader"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"processor_class"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"supports_abi_generation_from_source"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"java_binary"},"java_binary"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def java_binary(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _build_only_native_code: default_only = None,\n  _java_toolchain: str.type = None,\n  blacklist: [str.type] = None,\n  contacts: [str.type] = None,\n  default_cxx_platform: [None, str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  generate_wrapper: bool.type = None,\n  java_args_for_run_info: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  main_class: [None, str.type] = None,\n  manifest_file: [None, str.type] = None,\n  meta_inf_directory: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-67"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_build_only_native_code"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_java_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"blacklist"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_cxx_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"generate_wrapper"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"java_args_for_run_info"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"main_class"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest_file"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"meta_inf_directory"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"java_library"},"java_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def java_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _build_only_native_code: default_only = None,\n  _dex_min_sdk_version: [None, int.type] = None,\n  _dex_toolchain: [None, str.type] = None,\n  _is_building_android_binary: default_only = None,\n  _java_toolchain: str.type = None,\n  abi_generation_mode: [None, str.type] = None,\n  annotation_processor_deps: [str.type] = None,\n  annotation_processor_params: [str.type] = None,\n  annotation_processors: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  exported_deps: [str.type] = None,\n  exported_provided_deps: [str.type] = None,\n  extra_arguments: [str.type] = None,\n  java_version: [None, str.type] = None,\n  javac: [None, [str.type, str.type]] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  manifest_file: [None, str.type] = None,\n  maven_coords: [None, str.type] = None,\n  never_mark_as_unused_dependency: [None, bool.type] = None,\n  on_unused_dependencies: [None, str.type] = None,\n  plugins: [str.type] = None,\n  proguard_config: [None, str.type] = None,\n  provided_deps: [str.type] = None,\n  remove_classes: [str.type] = None,\n  required_for_source_only_abi: bool.type = None,\n  resources: [str.type] = None,\n  resources_root: [None, str.type] = None,\n  runtime_deps: [str.type] = None,\n  source: [None, str.type] = None,\n  source_abi_verification_mode: [None, str.type] = None,\n  source_only_abi_deps: [str.type] = None,\n  srcs: [str.type] = None,\n  target: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-68"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_build_only_native_code"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_dex_min_sdk_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_dex_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_is_building_android_binary"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_java_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"abi_generation_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_params"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processors"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_arguments"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"java_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"javac"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest_file"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"maven_coords"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"never_mark_as_unused_dependency"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"on_unused_dependencies"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"plugins"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"proguard_config"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"remove_classes"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"required_for_source_only_abi"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources_root"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"runtime_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_abi_verification_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_only_abi_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"java_plugin"},"java_plugin"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def java_plugin(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _build_only_native_code: default_only = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  does_not_affect_abi: bool.type = None,\n  isolate_class_loader: bool.type = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  plugin_name: str.type = None,\n  supports_abi_generation_from_source: bool.type = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-69"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_build_only_native_code"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"does_not_affect_abi"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"isolate_class_loader"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"plugin_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"supports_abi_generation_from_source"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"java_test"},"java_test"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def java_test(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _build_only_native_code: default_only = None,\n  _inject_test_env: default_only = None,\n  _is_building_android_binary: default_only = None,\n  _java_test_toolchain: str.type = None,\n  _java_toolchain: str.type = None,\n  abi_generation_mode: [None, str.type] = None,\n  annotation_processor_deps: [str.type] = None,\n  annotation_processor_params: [str.type] = None,\n  annotation_processors: [str.type] = None,\n  contacts: [str.type] = None,\n  cxx_library_whitelist: [str.type] = None,\n  default_cxx_platform: [None, str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  deps_query: [None, str.type] = None,\n  env: {str.type: str.type} = None,\n  exported_deps: [str.type] = None,\n  exported_provided_deps: [str.type] = None,\n  extra_arguments: [str.type] = None,\n  fork_mode: str.type = None,\n  java_version: [None, str.type] = None,\n  javac: [None, [str.type, str.type]] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  manifest_file: [None, str.type] = None,\n  maven_coords: [None, str.type] = None,\n  never_mark_as_unused_dependency: [None, bool.type] = None,\n  on_unused_dependencies: [None, str.type] = None,\n  plugins: [str.type] = None,\n  proguard_config: [None, str.type] = None,\n  provided_deps: [str.type] = None,\n  remove_classes: [str.type] = None,\n  required_for_source_only_abi: bool.type = None,\n  resources: [str.type] = None,\n  resources_root: [None, str.type] = None,\n  run_test_separately: bool.type = None,\n  runner: [None, str.type] = None,\n  runtime_deps: [str.type] = None,\n  source: [None, str.type] = None,\n  source_abi_verification_mode: [None, str.type] = None,\n  source_only_abi_deps: [str.type] = None,\n  specs: [None, str.type] = None,\n  srcs: [str.type] = None,\n  std_err_log_level: [None, [str.type, int.type]] = None,\n  std_out_log_level: [None, [str.type, int.type]] = None,\n  target: [None, str.type] = None,\n  test_case_timeout_ms: [None, int.type] = None,\n  test_rule_timeout_ms: [None, int.type] = None,\n  test_type: [None, str.type] = None,\n  use_cxx_libraries: [None, bool.type] = None,\n  use_dependency_order_classpath: [None, bool.type] = None,\n  vm_args: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-70"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_build_only_native_code"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_inject_test_env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_is_building_android_binary"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_java_test_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_java_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"abi_generation_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_params"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processors"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_library_whitelist"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_cxx_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps_query"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_arguments"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"fork_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"java_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"javac"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest_file"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"maven_coords"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"never_mark_as_unused_dependency"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"on_unused_dependencies"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"plugins"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"proguard_config"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"remove_classes"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"required_for_source_only_abi"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources_root"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"run_test_separately"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"runner"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"runtime_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_abi_verification_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_only_abi_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"specs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"std_err_log_level"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"std_out_log_level"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_case_timeout_ms"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_rule_timeout_ms"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"use_cxx_libraries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"use_dependency_order_classpath"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"vm_args"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"java_test_runner"},"java_test_runner"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def java_test_runner(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  abi_generation_mode: [None, str.type] = None,\n  annotation_processor_deps: [str.type] = None,\n  annotation_processor_params: [str.type] = None,\n  annotation_processors: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  exported_deps: [str.type] = None,\n  exported_provided_deps: [str.type] = None,\n  extra_arguments: [str.type] = None,\n  java_version: [None, str.type] = None,\n  javac: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  main_class: str.type = None,\n  manifest_file: [None, str.type] = None,\n  maven_coords: [None, str.type] = None,\n  never_mark_as_unused_dependency: [None, bool.type] = None,\n  on_unused_dependencies: [None, str.type] = None,\n  plugins: [str.type] = None,\n  proguard_config: [None, str.type] = None,\n  provided_deps: [str.type] = None,\n  remove_classes: [str.type] = None,\n  required_for_source_only_abi: bool.type = None,\n  resources: [str.type] = None,\n  resources_root: [None, str.type] = None,\n  runtime_deps: [str.type] = None,\n  source: [None, str.type] = None,\n  source_abi_verification_mode: [None, str.type] = None,\n  source_only_abi_deps: [str.type] = None,\n  srcs: [str.type] = None,\n  target: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-71"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"abi_generation_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_params"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processors"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_arguments"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"java_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"javac"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"main_class"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest_file"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"maven_coords"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"never_mark_as_unused_dependency"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"on_unused_dependencies"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"plugins"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"proguard_config"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"remove_classes"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"required_for_source_only_abi"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources_root"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"runtime_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_abi_verification_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_only_abi_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"js_bundle"},"js_bundle"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def js_bundle(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _android_toolchain: str.type = None,\n  _is_release: bool.type = None,\n  _platform: str.type = None,\n  android_package: [None, str.type] = None,\n  bundle_name: [None, str.type] = None,\n  bundle_name_for_flavor: [(str.type, str.type)] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  entry: [[str.type], str.type],\n  extra_json: [None, str.type] = None,\n  fallback_transform_profile: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None,\n  worker: str.type\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-72"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_android_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_is_release"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"android_package"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bundle_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bundle_name_for_flavor"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"entry"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_json"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"fallback_transform_profile"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"worker"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"js_bundle_genrule"},"js_bundle_genrule"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def js_bundle_genrule(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _genrule_toolchain: default_only = None,\n  _is_release: bool.type = None,\n  _platform: str.type = None,\n  bash: [None, str.type] = None,\n  bundle_name: [None, str.type] = None,\n  bundle_name_for_flavor: [(str.type, str.type)] = None,\n  cacheable: [None, bool.type] = None,\n  cmd: [None, str.type] = None,\n  cmd_exe: [None, str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  enable_sandbox: [None, bool.type] = None,\n  environment_expansion_separator: [None, str.type] = None,\n  js_bundle: str.type,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  need_android_tools: bool.type = None,\n  remote: [None, bool.type] = None,\n  rewrite_deps_file: bool.type = None,\n  rewrite_misc: bool.type = None,\n  rewrite_sourcemap: bool.type = None,\n  skip_resources: bool.type = None,\n  srcs: [{str.type: str.type}, [str.type]] = None,\n  type: str.type = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-73"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_genrule_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_is_release"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bash"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bundle_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bundle_name_for_flavor"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cacheable"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cmd"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cmd_exe"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"enable_sandbox"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"environment_expansion_separator"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"js_bundle"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"need_android_tools"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"remote"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"rewrite_deps_file"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"rewrite_misc"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"rewrite_sourcemap"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"skip_resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"js_library"},"js_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def js_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _build_only_native_code: bool.type = None,\n  _is_release: bool.type = None,\n  _platform: str.type = None,\n  asset_extensions: [None, [str.type]] = None,\n  asset_platforms: [None, [str.type]] = None,\n  base_path: [None, str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  deps_query: [None, str.type] = None,\n  extra_json: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  srcs: [[str.type, (str.type, str.type)]] = None,\n  within_view: [None, [None, [str.type]]] = None,\n  worker: str.type\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-74"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_build_only_native_code"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_is_release"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"asset_extensions"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"asset_platforms"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"base_path"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps_query"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_json"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"worker"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"json--unknown"},"json : ",(0,d.mdx)("inlineCode",{parentName:"h2"},"UNKNOWN")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"julia_binary"},"julia_binary"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def julia_binary(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _julia_toolchain: default_only = None,\n  deps: [str.type] = None,\n  julia_args: [str.type] = None,\n  julia_flags: [str.type] = None,\n  main: str.type,\n  srcs: [str.type] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-75"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_julia_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"julia_args"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"julia_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"main"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"julia_jll_library"},"julia_jll_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def julia_jll_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _julia_toolchain: default_only = None,\n  jll_name: str.type,\n  lib_mapping: [{str.type: str.type}, [str.type]],\n  uuid: str.type\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-76"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_julia_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"jll_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lib_mapping"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"uuid"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"julia_library"},"julia_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def julia_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _julia_toolchain: default_only = None,\n  deps: [str.type] = None,\n  project_toml: str.type,\n  resources: [str.type] = None,\n  srcs: [str.type] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-77"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_julia_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"project_toml"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"julia_test"},"julia_test"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def julia_test(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _julia_toolchain: default_only = None,\n  deps: [str.type] = None,\n  julia_args: [str.type] = None,\n  julia_flags: [str.type] = None,\n  resources: [str.type] = None,\n  src: str.type\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-78"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_julia_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"julia_args"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"julia_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"src"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"keystore"},"keystore"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def keystore(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  properties: str.type,\n  store: str.type,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-79"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"properties"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"store"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"kotlin_library"},"kotlin_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def kotlin_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _build_only_native_code: default_only = None,\n  _dex_min_sdk_version: [None, int.type] = None,\n  _dex_toolchain: [None, str.type] = None,\n  _is_building_android_binary: default_only = None,\n  _java_toolchain: str.type = None,\n  _kotlin_toolchain: str.type = None,\n  abi_generation_mode: [None, str.type] = None,\n  annotation_processing_tool: [None, str.type] = None,\n  annotation_processor_deps: [str.type] = None,\n  annotation_processor_params: [str.type] = None,\n  annotation_processors: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  exported_deps: [str.type] = None,\n  exported_provided_deps: [str.type] = None,\n  extra_arguments: [str.type] = None,\n  extra_kotlinc_arguments: [str.type] = None,\n  friend_paths: [str.type] = None,\n  java_version: [None, str.type] = None,\n  javac: [None, [str.type, str.type]] = None,\n  kotlin_compiler_plugins: {str.type: {str.type: str.type}} = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  manifest_file: [None, str.type] = None,\n  maven_coords: [None, str.type] = None,\n  never_mark_as_unused_dependency: [None, bool.type] = None,\n  on_unused_dependencies: [None, str.type] = None,\n  plugins: [str.type] = None,\n  proguard_config: [None, str.type] = None,\n  provided_deps: [str.type] = None,\n  remove_classes: [str.type] = None,\n  required_for_source_only_abi: bool.type = None,\n  resources: [str.type] = None,\n  resources_root: [None, str.type] = None,\n  runtime_deps: [str.type] = None,\n  source: [None, str.type] = None,\n  source_abi_verification_mode: [None, str.type] = None,\n  source_only_abi_deps: [str.type] = None,\n  srcs: [str.type] = None,\n  target: [None, str.type] = None,\n  use_jvm_abi_gen: [None, bool.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-80"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_build_only_native_code"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_dex_min_sdk_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_dex_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_is_building_android_binary"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_java_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_kotlin_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"abi_generation_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processing_tool"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_params"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processors"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_arguments"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_kotlinc_arguments"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"friend_paths"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"java_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"javac"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"kotlin_compiler_plugins"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest_file"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"maven_coords"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"never_mark_as_unused_dependency"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"on_unused_dependencies"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"plugins"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"proguard_config"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"remove_classes"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"required_for_source_only_abi"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources_root"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"runtime_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_abi_verification_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_only_abi_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"use_jvm_abi_gen"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"kotlin_test"},"kotlin_test"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def kotlin_test(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _build_only_native_code: default_only = None,\n  _inject_test_env: default_only = None,\n  _is_building_android_binary: default_only = None,\n  _java_test_toolchain: str.type = None,\n  _java_toolchain: str.type = None,\n  _kotlin_toolchain: str.type = None,\n  abi_generation_mode: [None, str.type] = None,\n  annotation_processing_tool: [None, str.type] = None,\n  annotation_processor_deps: [str.type] = None,\n  annotation_processor_params: [str.type] = None,\n  annotation_processors: [str.type] = None,\n  contacts: [str.type] = None,\n  cxx_library_whitelist: [str.type] = None,\n  default_cxx_platform: [None, str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  deps_query: [None, str.type] = None,\n  env: {str.type: str.type} = None,\n  exported_deps: [str.type] = None,\n  exported_provided_deps: [str.type] = None,\n  extra_arguments: [str.type] = None,\n  extra_kotlinc_arguments: [str.type] = None,\n  fork_mode: str.type = None,\n  friend_paths: [str.type] = None,\n  java_version: [None, str.type] = None,\n  javac: [None, [str.type, str.type]] = None,\n  kotlin_compiler_plugins: {str.type: {str.type: str.type}} = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  manifest_file: [None, str.type] = None,\n  maven_coords: [None, str.type] = None,\n  never_mark_as_unused_dependency: [None, bool.type] = None,\n  on_unused_dependencies: [None, str.type] = None,\n  plugins: [str.type] = None,\n  proguard_config: [None, str.type] = None,\n  provided_deps: [str.type] = None,\n  remove_classes: [str.type] = None,\n  required_for_source_only_abi: bool.type = None,\n  resources: [str.type] = None,\n  resources_root: [None, str.type] = None,\n  run_test_separately: bool.type = None,\n  runtime_deps: [str.type] = None,\n  source: [None, str.type] = None,\n  source_abi_verification_mode: [None, str.type] = None,\n  source_only_abi_deps: [str.type] = None,\n  srcs: [str.type] = None,\n  std_err_log_level: [None, [str.type, int.type]] = None,\n  std_out_log_level: [None, [str.type, int.type]] = None,\n  target: [None, str.type] = None,\n  test_case_timeout_ms: [None, int.type] = None,\n  test_rule_timeout_ms: [None, int.type] = None,\n  test_type: [None, str.type] = None,\n  use_cxx_libraries: [None, bool.type] = None,\n  use_dependency_order_classpath: [None, bool.type] = None,\n  use_jvm_abi_gen: [None, bool.type] = None,\n  vm_args: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-81"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_build_only_native_code"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_inject_test_env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_is_building_android_binary"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_java_test_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_java_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_kotlin_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"abi_generation_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processing_tool"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_params"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processors"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_library_whitelist"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_cxx_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps_query"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_arguments"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_kotlinc_arguments"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"fork_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"friend_paths"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"java_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"javac"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"kotlin_compiler_plugins"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest_file"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"maven_coords"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"never_mark_as_unused_dependency"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"on_unused_dependencies"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"plugins"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"proguard_config"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"remove_classes"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"required_for_source_only_abi"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources_root"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"run_test_separately"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"runtime_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_abi_verification_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_only_abi_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"std_err_log_level"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"std_out_log_level"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_case_timeout_ms"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_rule_timeout_ms"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"use_cxx_libraries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"use_dependency_order_classpath"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"use_jvm_abi_gen"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"vm_args"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"legacy_toolchain"},"legacy_toolchain"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def legacy_toolchain(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  toolchain_name: str.type = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-82"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"toolchain_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"link_group_map"},"link_group_map"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def link_group_map(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  map: [(str.type, [(str.type, str.type, [None, str.type], [None, str.type])])]\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-83"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"map"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"load_symbols"},"load_symbols"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def load_symbols(symbols: {"": ""}) -> None\n')),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"lua_binary"},"lua_binary"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def lua_binary(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  main_module: str.type = None,\n  native_starter_library: [None, str.type] = None,\n  package_style: [None, str.type] = None,\n  platform: [None, str.type] = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  python_platform: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-84"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"main_module"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"native_starter_library"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"package_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"python_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"lua_library"},"lua_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def lua_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  base_module: [None, str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  srcs: [{str.type: str.type}, [str.type]] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-85"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"base_module"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"map"},"map"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def map(func: "", seq: iter("")) -> [""]\n')),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"ndk_library"},"ndk_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def ndk_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  flags: [str.type] = None,\n  is_asset: bool.type = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  srcs: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-86"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"is_asset"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"ndk_toolchain"},"ndk_toolchain"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def ndk_toolchain(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  cxx_runtime: [None, str.type] = None,\n  cxx_toolchain: str.type,\n  default_host_platform: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  objdump: str.type,\n  shared_runtime_path: [None, str.type] = None,\n  strip_apk_libs_flags: [None, [str.type]] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-87"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_runtime"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"objdump"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"shared_runtime_path"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"strip_apk_libs_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"ocaml_binary"},"ocaml_binary"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def ocaml_binary(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _cxx_toolchain: default_only = None,\n  _ocaml_toolchain: default_only = None,\n  bytecode_only: [None, bool.type] = None,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  linker_flags: [str.type] = None,\n  ocamldep_flags: [str.type] = None,\n  platform: [None, str.type] = None,\n  platform_compiler_flags: [(str.type, [str.type])] = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  platform_linker_flags: [(str.type, [str.type])] = None,\n  srcs: [None, [{str.type: str.type}, [str.type]]] = None,\n  warnings_flags: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-88"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_ocaml_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bytecode_only"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"ocamldep_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"warnings_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"ocaml_library"},"ocaml_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def ocaml_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _cxx_toolchain: default_only = None,\n  _ocaml_toolchain: default_only = None,\n  bytecode_only: bool.type = None,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  linker_flags: [str.type] = None,\n  native_plugin: bool.type = None,\n  ocamldep_flags: [str.type] = None,\n  platform_compiler_flags: [(str.type, [str.type])] = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  srcs: [None, [{str.type: str.type}, [str.type]]] = None,\n  warnings_flags: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-89"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_ocaml_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bytecode_only"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"native_plugin"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"ocamldep_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"warnings_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"ocaml_object"},"ocaml_object"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def ocaml_object(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _cxx_toolchain: default_only = None,\n  _ocaml_toolchain: default_only = None,\n  bytecode_only: [None, bool.type] = None,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  linker_flags: [str.type] = None,\n  ocamldep_flags: [str.type] = None,\n  platform: [None, str.type] = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  platform_linker_flags: [(str.type, [str.type])] = None,\n  srcs: [None, [{str.type: str.type}, [str.type]]] = None,\n  warnings_flags: [None, str.type] = None,\n  within_view: [None, [str.type]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-90"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_ocaml_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bytecode_only"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"ocamldep_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"warnings_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"ocaml_shared"},"ocaml_shared"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def ocaml_shared(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _cxx_toolchain: default_only = None,\n  _ocaml_toolchain: default_only = None,\n  bytecode_only: [None, bool.type] = None,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  linker_flags: [str.type] = None,\n  ocamldep_flags: [str.type] = None,\n  platform: [None, str.type] = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  platform_linker_flags: [(str.type, [str.type])] = None,\n  srcs: [None, [{str.type: str.type}, [str.type]]] = None,\n  warnings_flags: [None, str.type] = None,\n  within_view: [None, [str.type]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-91"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_ocaml_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bytecode_only"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"ocamldep_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"warnings_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"oncall"},"oncall"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def oncall(name: str.type) -> None\n")),(0,d.mdx)("p",null,"Called in a ",(0,d.mdx)("inlineCode",{parentName:"p"},"BUCK")," file to declare the oncall contact details for all the targets defined. Must be called at most once, before any targets have been declared. Errors if called from a ",(0,d.mdx)("inlineCode",{parentName:"p"},".bzl")," file."),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"package"},"package"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def package(*, inherit: bool.type = None, visibility: [str.type] = None, within_view: [str.type] = None) -> None\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"package_name"},"package_name"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def package_name() -> str.type\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"partial"},"partial"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def partial(func: "", *args: UNKNOWN, **kwargs: {"": ""}) -> "function"\n')),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"platform"},"platform"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def platform(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  constraint_values: [str.type] = None,\n  deps: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-92"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"constraint_values"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"pprint"},"pprint"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def pprint(*args: UNKNOWN) -> None\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"prebuilt_apple_framework"},"prebuilt_apple_framework"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def prebuilt_apple_framework(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _apple_toolchain: str.type = None,\n  _omnibus_environment: [None, str.type] = None,\n  code_sign_on_copy: [None, bool.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  exported_linker_flags: [str.type] = None,\n  exported_platform_linker_flags: [(str.type, [str.type])] = None,\n  framework: [None, str.type] = None,\n  frameworks: [str.type] = None,\n  labels: [str.type] = None,\n  libraries: [str.type] = None,\n  licenses: [str.type] = None,\n  preferred_linkage: str.type = None,\n  supported_platforms_regex: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-93"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_apple_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_omnibus_environment"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"code_sign_on_copy"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"framework"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"frameworks"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"libraries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preferred_linkage"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"supported_platforms_regex"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"prebuilt_cxx_library"},"prebuilt_cxx_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def prebuilt_cxx_library(\n    exported_preprocessor_flags: UNKNOWN = None,\n  versioned_exported_preprocessor_flags: UNKNOWN = None,\n  exported_lang_preprocessor_flags: UNKNOWN = None,\n  versioned_exported_lang_preprocessor_flags: UNKNOWN = None,\n  exported_platform_preprocessor_flags: UNKNOWN = None,\n  versioned_exported_platform_preprocessor_flags: UNKNOWN = None,\n  exported_lang_platform_preprocessor_flags: UNKNOWN = None,\n  versioned_exported_lang_platform_preprocessor_flags: UNKNOWN = None,\n  static_lib: UNKNOWN = None,\n  versioned_static_lib: UNKNOWN = None,\n  static_pic_lib: UNKNOWN = None,\n  versioned_static_pic_lib: UNKNOWN = None,\n  shared_lib: UNKNOWN = None,\n  versioned_shared_lib: UNKNOWN = None,\n  header_dirs: UNKNOWN = None,\n  versioned_header_dirs: UNKNOWN = None,\n  **kwargs: UNKNOWN\n) -> UNKNOWN\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"prebuilt_cxx_library_group"},"prebuilt_cxx_library_group"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def prebuilt_cxx_library_group(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  exported_deps: [str.type] = None,\n  exported_platform_deps: [(str.type, [str.type])] = None,\n  exported_preprocessor_flags: [str.type] = None,\n  import_libs: {str.type: str.type} = None,\n  include_dirs: [str.type] = None,\n  include_in_android_merge_map_output: bool.type = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  provided_shared_libs: {str.type: str.type} = None,\n  shared_libs: {str.type: str.type} = None,\n  shared_link: [str.type] = None,\n  static_libs: [str.type] = None,\n  static_link: [str.type] = None,\n  static_pic_libs: [str.type] = None,\n  static_pic_link: [str.type] = None,\n  supported_platforms_regex: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-94"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"import_libs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"include_dirs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"include_in_android_merge_map_output"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"provided_shared_libs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"shared_libs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"shared_link"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"static_libs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"static_link"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"static_pic_libs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"static_pic_link"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"supported_platforms_regex"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"prebuilt_dotnet_library"},"prebuilt_dotnet_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def prebuilt_dotnet_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  assembly: str.type,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-95"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"assembly"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"prebuilt_go_library"},"prebuilt_go_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def prebuilt_go_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  exported_deps: [str.type] = None,\n  labels: [str.type] = None,\n  library: str.type,\n  licenses: [str.type] = None,\n  package_name: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-96"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"library"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"package_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"prebuilt_jar"},"prebuilt_jar"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def prebuilt_jar(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _build_only_native_code: default_only = None,\n  _dex_min_sdk_version: [None, int.type] = None,\n  _dex_toolchain: [None, str.type] = None,\n  _prebuilt_jar_toolchain: str.type = None,\n  binary_jar: str.type,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  generate_abi: bool.type = None,\n  javadoc_url: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  maven_coords: [None, str.type] = None,\n  never_mark_as_unused_dependency: bool.type = None,\n  required_for_source_only_abi: bool.type = None,\n  source_jar: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-97"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_build_only_native_code"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_dex_min_sdk_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_dex_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_prebuilt_jar_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"binary_jar"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"generate_abi"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"javadoc_url"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"maven_coords"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"never_mark_as_unused_dependency"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"required_for_source_only_abi"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_jar"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"prebuilt_native_library"},"prebuilt_native_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def prebuilt_native_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  has_wrap_script: bool.type = None,\n  is_asset: bool.type = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  native_libs: str.type,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-98"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"has_wrap_script"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"is_asset"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"native_libs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"prebuilt_ocaml_library"},"prebuilt_ocaml_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def prebuilt_ocaml_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  bytecode_c_libs: [str.type] = None,\n  bytecode_lib: [None, str.type] = None,\n  bytecode_only: bool.type = None,\n  c_libs: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  include_dir: [None, str.type] = None,\n  labels: [str.type] = None,\n  lib_dir: str.type = None,\n  lib_name: str.type = None,\n  licenses: [str.type] = None,\n  native_c_libs: [str.type] = None,\n  native_lib: [None, str.type] = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-99"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bytecode_c_libs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bytecode_lib"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bytecode_only"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"c_libs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"include_dir"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lib_dir"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lib_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"native_c_libs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"native_lib"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"prebuilt_python_library"},"prebuilt_python_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def prebuilt_python_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _create_manifest_for_source_dir: str.type = None,\n  _extract: default_only = None,\n  _python_toolchain: default_only = None,\n  binary_src: str.type,\n  compile: bool.type = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  exclude_deps_from_merged_linking: bool.type = None,\n  ignore_compile_errors: bool.type = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-100"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_create_manifest_for_source_dir"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_extract"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_python_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"binary_src"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compile"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exclude_deps_from_merged_linking"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"ignore_compile_errors"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"prebuilt_rust_library"},"prebuilt_rust_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def prebuilt_rust_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _cxx_toolchain: default_only = None,\n  _rust_toolchain: default_only = None,\n  contacts: [str.type] = None,\n  crate: str.type = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  link_style: [None, str.type] = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  proc_macro: bool.type = None,\n  rlib: str.type,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-101"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_rust_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"crate"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"proc_macro"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"rlib"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"print"},"print"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def print(*args: UNKNOWN) -> None\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"provider"},"provider"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def provider(doc: str.type = None, fields: [[str.type], {str.type: str.type}]) -> "provider_callable"\n')),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"python--unknown"},"python : ",(0,d.mdx)("inlineCode",{parentName:"h2"},"UNKNOWN")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"python_binary"},"python_binary"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def python_binary(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _create_manifest_for_source_dir: str.type = None,\n  _cxx_hacks: default_only = None,\n  _cxx_toolchain: default_only = None,\n  _exec_os_type: default_only = None,\n  _omnibus_environment: [None, str.type] = None,\n  _package_remotely: bool.type = None,\n  _python_toolchain: default_only = None,\n  _target_os_type: default_only = None,\n  allow_huge_dwp: bool.type = None,\n  auto_link_groups: default_only = None,\n  base_module: [None, str.type] = None,\n  binary_linker_flags: default_only = None,\n  bolt_flags: default_only = None,\n  bolt_gdb_index: default_only = None,\n  bolt_profile: default_only = None,\n  build_args: [str.type] = None,\n  compile: [None, bool.type] = None,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  cxx_main: str.type = None,\n  cxx_platform: [None, str.type] = None,\n  cxx_runtime_type: default_only = None,\n  deduplicate_merged_link_roots: [None, bool.type] = None,\n  default_host_platform: [None, str.type] = None,\n  default_platform: default_only = None,\n  defaults: default_only = None,\n  deps: [str.type] = None,\n  deps_query: default_only = None,\n  devirt_enabled: default_only = None,\n  dummy_omnibus: [None, str.type] = None,\n  enable_distributed_thinlto: bool.type = None,\n  executable_deps: [str.type] = None,\n  executable_name: [None, str.type] = None,\n  extension: [None, str.type] = None,\n  fat_lto: default_only = None,\n  focused_list_target: default_only = None,\n  frameworks: default_only = None,\n  header_namespace: default_only = None,\n  headers: default_only = None,\n  headers_as_raw_headers_mode: default_only = None,\n  include_directories: default_only = None,\n  labels: [str.type] = None,\n  lang_compiler_flags: default_only = None,\n  lang_platform_compiler_flags: default_only = None,\n  lang_platform_preprocessor_flags: default_only = None,\n  lang_preprocessor_flags: default_only = None,\n  libraries: default_only = None,\n  licenses: [str.type] = None,\n  link_deps_query_whole: default_only = None,\n  link_group: [None, str.type] = None,\n  link_group_map: [None, [str.type, [(str.type, [([None, str.type], str.type, [None, str.type], [None, str.type])])]]] = None,\n  link_style: str.type = None,\n  link_whole: default_only = None,\n  linker_extra_outputs: default_only = None,\n  linker_flags: [str.type] = None,\n  main: [None, str.type] = None,\n  main_module: [None, str.type] = None,\n  make_pex: [None, str.type] = None,\n  manifest_module_entries: [None, {str.type: ""}] = None,\n  native_link_strategy: [None, str.type] = None,\n  package_split_dwarf_dwp: bool.type = None,\n  package_style: [None, str.type] = None,\n  par_style: [None, str.type] = None,\n  platform: [None, str.type] = None,\n  platform_compiler_flags: default_only = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  platform_headers: default_only = None,\n  platform_linker_flags: [(str.type, [str.type])] = None,\n  platform_preload_deps: [(str.type, [str.type])] = None,\n  platform_preprocessor_flags: default_only = None,\n  platform_srcs: default_only = None,\n  post_linker_flags: default_only = None,\n  post_platform_linker_flags: default_only = None,\n  precompiled_header: default_only = None,\n  prefer_stripped_native_objects: bool.type = None,\n  prefer_stripped_objects: default_only = None,\n  prefix_header: default_only = None,\n  preload_deps: [str.type] = None,\n  preprocessor_flags: default_only = None,\n  raw_headers: default_only = None,\n  resources: [{str.type: [str.type, str.type]}, [[str.type, str.type]]] = None,\n  static_extension_finder: str.type = None,\n  static_extension_utils: str.type = None,\n  thin_lto: default_only = None,\n  version_universe: [None, str.type] = None,\n  weak_framework_names: default_only = None,\n  within_view: [None, [None, [str.type]]] = None,\n  zip_safe: [None, bool.type] = None\n) -> None\n')),(0,d.mdx)("h3",{id:"parameters-102"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_create_manifest_for_source_dir"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_hacks"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_exec_os_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_omnibus_environment"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_package_remotely"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_python_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_target_os_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"allow_huge_dwp"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"auto_link_groups"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"base_module"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"binary_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bolt_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bolt_gdb_index"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bolt_profile"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"build_args"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compile"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_main"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_runtime_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deduplicate_merged_link_roots"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"defaults"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps_query"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"devirt_enabled"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"dummy_omnibus"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"enable_distributed_thinlto"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"executable_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"executable_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extension"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"fat_lto"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"focused_list_target"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"frameworks"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"header_namespace"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"headers_as_raw_headers_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"include_directories"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_platform_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"libraries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_deps_query_whole"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_group"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_group_map"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_whole"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_extra_outputs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"main"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"main_module"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"make_pex"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest_module_entries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"native_link_strategy"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"package_split_dwarf_dwp"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"package_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"par_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_preload_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"post_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"post_platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"precompiled_header"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"prefer_stripped_native_objects"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"prefer_stripped_objects"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"prefix_header"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preload_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"raw_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"static_extension_finder"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"static_extension_utils"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"thin_lto"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"version_universe"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"weak_framework_names"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"zip_safe"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"python_bootstrap_binary"},"python_bootstrap_binary"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def python_bootstrap_binary(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _exec_os_type: default_only = None,\n  _python_bootstrap_toolchain: default_only = None,\n  _win_python_wrapper: default_only = None,\n  deps: [str.type] = None,\n  main: str.type\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-103"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_exec_os_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_python_bootstrap_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_win_python_wrapper"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"main"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"python_bootstrap_library"},"python_bootstrap_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def python_bootstrap_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  srcs: [str.type]\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-104"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"python_library"},"python_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def python_library(srcs: UNKNOWN = None, versioned_srcs: UNKNOWN = None, resources: UNKNOWN = None, versioned_resources: UNKNOWN = None, **kwargs: UNKNOWN) -> UNKNOWN\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"python_needed_coverage_test"},"python_needed_coverage_test"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def python_needed_coverage_test(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _inject_test_env: default_only = None,\n  contacts: [str.type] = None,\n  env: {str.type: str.type} = None,\n  labels: [str.type] = None,\n  needed_coverage: [(int.type, str.type, [None, str.type])] = None,\n  remote_execution: [None, {str.type: str.type}] = None,\n  test: str.type\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-105"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_inject_test_env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"needed_coverage"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"remote_execution"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"python_test"},"python_test"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def python_test(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _create_manifest_for_source_dir: str.type = None,\n  _cxx_hacks: default_only = None,\n  _cxx_toolchain: default_only = None,\n  _exec_os_type: default_only = None,\n  _inject_test_env: default_only = None,\n  _omnibus_environment: [None, str.type] = None,\n  _python_toolchain: default_only = None,\n  _target_os_type: default_only = None,\n  _test_main: str.type = None,\n  additional_coverage_targets: [str.type] = None,\n  allow_huge_dwp: bool.type = None,\n  auto_link_groups: default_only = None,\n  base_module: [None, str.type] = None,\n  binary_linker_flags: default_only = None,\n  bolt_flags: default_only = None,\n  bolt_gdb_index: default_only = None,\n  bolt_profile: default_only = None,\n  build_args: [str.type] = None,\n  compile: [None, bool.type] = None,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  cxx_main: str.type = None,\n  cxx_platform: [None, str.type] = None,\n  cxx_runtime_type: default_only = None,\n  deduplicate_merged_link_roots: [None, bool.type] = None,\n  default_host_platform: [None, str.type] = None,\n  default_platform: default_only = None,\n  defaults: default_only = None,\n  deps: [str.type] = None,\n  deps_query: default_only = None,\n  devirt_enabled: default_only = None,\n  dummy_omnibus: [None, str.type] = None,\n  enable_distributed_thinlto: bool.type = None,\n  env: {str.type: str.type} = None,\n  exclude_deps_from_merged_linking: bool.type = None,\n  executable_deps: [str.type] = None,\n  executable_name: [None, str.type] = None,\n  extension: [None, str.type] = None,\n  fat_lto: default_only = None,\n  focused_list_target: default_only = None,\n  frameworks: default_only = None,\n  header_namespace: default_only = None,\n  headers: default_only = None,\n  headers_as_raw_headers_mode: default_only = None,\n  include_directories: default_only = None,\n  labels: [str.type] = None,\n  lang_compiler_flags: default_only = None,\n  lang_platform_compiler_flags: default_only = None,\n  lang_platform_preprocessor_flags: default_only = None,\n  lang_preprocessor_flags: default_only = None,\n  libraries: default_only = None,\n  licenses: [str.type] = None,\n  link_deps_query_whole: default_only = None,\n  link_group: [None, str.type] = None,\n  link_group_map: [None, [str.type, [(str.type, [([None, str.type], str.type, [None, str.type], [None, str.type])])]]] = None,\n  link_style: default_only = None,\n  link_whole: default_only = None,\n  linker_extra_outputs: default_only = None,\n  linker_flags: [str.type] = None,\n  main_module: [None, str.type] = None,\n  make_pex: [None, str.type] = None,\n  manifest_module_entries: [None, {str.type: ""}] = None,\n  native_link_strategy: [None, str.type] = None,\n  needed_coverage: [(int.type, str.type, [None, str.type])] = None,\n  package_split_dwarf_dwp: bool.type = None,\n  package_style: [None, str.type] = None,\n  par_style: [None, str.type] = None,\n  platform: [None, str.type] = None,\n  platform_compiler_flags: default_only = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  platform_headers: default_only = None,\n  platform_linker_flags: [(str.type, [str.type])] = None,\n  platform_preload_deps: [(str.type, [str.type])] = None,\n  platform_preprocessor_flags: default_only = None,\n  platform_resources: [(str.type, [{str.type: str.type}, [str.type]])] = None,\n  platform_srcs: default_only = None,\n  post_linker_flags: default_only = None,\n  post_platform_linker_flags: default_only = None,\n  precompiled_header: default_only = None,\n  prefer_stripped_native_objects: bool.type = None,\n  prefer_stripped_objects: default_only = None,\n  prefix_header: default_only = None,\n  preload_deps: [str.type] = None,\n  preprocessor_flags: default_only = None,\n  raw_headers: default_only = None,\n  remote_execution: [None, {str.type: str.type}] = None,\n  resources: [{str.type: [str.type, str.type]}, [[str.type, str.type]]] = None,\n  runner: [None, str.type] = None,\n  specs: [None, str.type] = None,\n  srcs: [{str.type: str.type}, [str.type]] = None,\n  static_extension_finder: str.type = None,\n  static_extension_utils: str.type = None,\n  test_rule_timeout_ms: [None, int.type] = None,\n  thin_lto: default_only = None,\n  version_universe: [None, str.type] = None,\n  versioned_resources: [None, [({str.type: str.type}, [{str.type: str.type}, [str.type]])]] = None,\n  versioned_srcs: [None, [({str.type: str.type}, [{str.type: str.type}, [str.type]])]] = None,\n  weak_framework_names: default_only = None,\n  within_view: [None, [None, [str.type]]] = None,\n  zip_safe: [None, bool.type] = None\n) -> None\n')),(0,d.mdx)("h3",{id:"parameters-106"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_create_manifest_for_source_dir"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_hacks"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_exec_os_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_inject_test_env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_omnibus_environment"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_python_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_target_os_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_test_main"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"additional_coverage_targets"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"allow_huge_dwp"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"auto_link_groups"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"base_module"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"binary_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bolt_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bolt_gdb_index"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bolt_profile"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"build_args"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compile"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_main"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_runtime_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deduplicate_merged_link_roots"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"defaults"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps_query"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"devirt_enabled"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"dummy_omnibus"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"enable_distributed_thinlto"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exclude_deps_from_merged_linking"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"executable_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"executable_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extension"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"fat_lto"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"focused_list_target"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"frameworks"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"header_namespace"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"headers_as_raw_headers_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"include_directories"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_platform_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"lang_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"libraries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_deps_query_whole"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_group"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_group_map"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_whole"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_extra_outputs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"main_module"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"make_pex"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest_module_entries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"native_link_strategy"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"needed_coverage"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"package_split_dwarf_dwp"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"package_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"par_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_preload_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"post_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"post_platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"precompiled_header"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"prefer_stripped_native_objects"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"prefer_stripped_objects"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"prefix_header"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preload_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preprocessor_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"raw_headers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"remote_execution"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"runner"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"specs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"static_extension_finder"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"static_extension_utils"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_rule_timeout_ms"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"thin_lto"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"version_universe"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"versioned_resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"versioned_srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"weak_framework_names"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"zip_safe"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"python_test_runner"},"python_test_runner"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def python_test_runner(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  main_module: str.type = None,\n  src: str.type,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-107"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"main_module"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"src"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"read_config"},"read_config"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def read_config(section: str.type, key: str.type, default: [None, ""] = None) -> ""\n')),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"read_package_value"},"read_package_value"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def read_package_value(key: str.type) -> ""\n')),(0,d.mdx)("p",null,"Read value specified in the ",(0,d.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," file."),(0,d.mdx)("h3",{id:"details-1"},"Details"),(0,d.mdx)("p",null,"Returns ",(0,d.mdx)("inlineCode",{parentName:"p"},"None")," if value is not set."),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"read_root_config"},"read_root_config"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def read_root_config(section: str.type, key: str.type, default: [None, str.type] = None) -> [None, str.type]\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"record"},"record"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def record(**kwargs: {str.type: ""}) -> "function"\n')),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"regex_match"},"regex_match"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def regex_match(regex: str.type, str: str.type) -> bool.type\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"remote_file"},"remote_file"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def remote_file(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _unzip_tool: default_only = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  out: [None, str.type] = None,\n  sha1: [None, str.type] = None,\n  sha256: [None, str.type] = None,\n  type: [None, str.type] = None,\n  url: str.type,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-108"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_unzip_tool"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"out"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"sha1"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"sha256"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"url"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"repository_name"},"repository_name"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def repository_name() -> str.type\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"resource_group_map"},"resource_group_map"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def resource_group_map(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  map: [(str.type, [(str.type, str.type, [None, str.type])])]\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-109"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"map"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"robolectric_test"},"robolectric_test"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def robolectric_test(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _android_toolchain: str.type = None,\n  _build_only_native_code: default_only = None,\n  _inject_test_env: default_only = None,\n  _is_building_android_binary: default_only = None,\n  _java_test_toolchain: default_only = None,\n  _java_toolchain: str.type = None,\n  _kotlin_toolchain: str.type = None,\n  abi_generation_mode: [None, str.type] = None,\n  annotation_processing_tool: [None, str.type] = None,\n  annotation_processor_deps: [str.type] = None,\n  annotation_processor_params: [str.type] = None,\n  annotation_processors: [str.type] = None,\n  contacts: [str.type] = None,\n  cxx_library_whitelist: [str.type] = None,\n  default_cxx_platform: [None, str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  deps_query: [None, str.type] = None,\n  env: {str.type: str.type} = None,\n  exported_deps: [str.type] = None,\n  exported_provided_deps: [str.type] = None,\n  extra_arguments: [str.type] = None,\n  extra_kotlinc_arguments: [str.type] = None,\n  fork_mode: str.type = None,\n  friend_paths: [str.type] = None,\n  java_version: [None, str.type] = None,\n  javac: [None, str.type] = None,\n  kotlin_compiler_plugins: {str.type: {str.type: str.type}} = None,\n  labels: [str.type] = None,\n  language: [None, str.type] = None,\n  licenses: [str.type] = None,\n  locales_for_binary_resources: [str.type] = None,\n  manifest_entries: {str.type: ""} = None,\n  manifest_file: [None, str.type] = None,\n  maven_coords: [None, str.type] = None,\n  never_mark_as_unused_dependency: [None, bool.type] = None,\n  on_unused_dependencies: [None, str.type] = None,\n  plugins: [str.type] = None,\n  preferred_density_for_binary_resources: [None, str.type] = None,\n  proguard_config: [None, str.type] = None,\n  provided_deps: [str.type] = None,\n  remove_classes: [str.type] = None,\n  required_for_source_only_abi: bool.type = None,\n  resource_union_package: [None, str.type] = None,\n  resources: [str.type] = None,\n  resources_root: [None, str.type] = None,\n  robolectric_manifest: str.type,\n  robolectric_runtime_dependencies: [str.type] = None,\n  robolectric_runtime_dependency: [None, str.type] = None,\n  run_test_separately: bool.type = None,\n  runtime_deps: [str.type] = None,\n  source: [None, str.type] = None,\n  source_abi_verification_mode: [None, str.type] = None,\n  source_only_abi_deps: [str.type] = None,\n  srcs: [str.type] = None,\n  std_err_log_level: [None, [str.type, int.type]] = None,\n  std_out_log_level: [None, [str.type, int.type]] = None,\n  target: [None, str.type] = None,\n  test_case_timeout_ms: [None, int.type] = None,\n  test_rule_timeout_ms: [None, int.type] = None,\n  test_type: [None, str.type] = None,\n  use_cxx_libraries: [None, bool.type] = None,\n  use_dependency_order_classpath: [None, bool.type] = None,\n  use_jvm_abi_gen: [None, bool.type] = None,\n  vm_args: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n')),(0,d.mdx)("h3",{id:"parameters-110"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_android_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_build_only_native_code"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_inject_test_env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_is_building_android_binary"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_java_test_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_java_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_kotlin_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"abi_generation_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processing_tool"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_params"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processors"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_library_whitelist"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_cxx_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps_query"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_arguments"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_kotlinc_arguments"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"fork_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"friend_paths"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"java_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"javac"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"kotlin_compiler_plugins"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"language"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"locales_for_binary_resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest_entries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest_file"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"maven_coords"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"never_mark_as_unused_dependency"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"on_unused_dependencies"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"plugins"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preferred_density_for_binary_resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"proguard_config"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"remove_classes"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"required_for_source_only_abi"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resource_union_package"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources_root"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"robolectric_manifest"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"robolectric_runtime_dependencies"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"robolectric_runtime_dependency"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"run_test_separately"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"runtime_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_abi_verification_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_only_abi_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"std_err_log_level"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"std_out_log_level"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_case_timeout_ms"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_rule_timeout_ms"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"use_cxx_libraries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"use_dependency_order_classpath"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"use_jvm_abi_gen"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"vm_args"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"rule"},"rule"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def rule(\n    *,\n  impl: "",\n  attrs: {str.type: "attribute"},\n  cfg: [None, ""] = None,\n  doc: str.type = None,\n  is_configuration_rule: bool.type = None,\n  is_toolchain_rule: bool.type = None\n) -> ""\n')),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"rule_exists"},"rule_exists"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def rule_exists(name: str.type) -> bool.type\n")),(0,d.mdx)("p",null,'This should be called "target exists", not "rule exists" (if this should exist at all).'),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"rust_binary"},"rust_binary"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def rust_binary(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _cxx_toolchain: default_only = None,\n  _exec_os_type: default_only = None,\n  _rust_toolchain: default_only = None,\n  _target_os_type: default_only = None,\n  contacts: [str.type] = None,\n  crate: [None, str.type] = None,\n  crate_root: [None, str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  default_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  edition: [None, str.type] = None,\n  env: {str.type: str.type} = None,\n  features: [str.type] = None,\n  flagged_deps: [(str.type, [str.type])] = None,\n  framework: bool.type = None,\n  incremental_build_mode: [None, str.type] = None,\n  incremental_enabled: bool.type = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  link_style: [None, str.type] = None,\n  linker_flags: [str.type] = None,\n  mapped_srcs: {str.type: str.type} = None,\n  named_deps: {str.type: str.type} = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  platform_flagged_deps: [(str.type, [(str.type, [str.type])])] = None,\n  platform_linker_flags: [(str.type, [str.type])] = None,\n  platform_rustc_flags: {str.type: [str.type]} = None,\n  resources: [{str.type: [str.type, str.type]}, [[str.type, str.type]]] = None,\n  rpath: bool.type = None,\n  rustc_flags: [str.type] = None,\n  rustdoc_flags: [str.type] = None,\n  srcs: [str.type] = None,\n  version_universe: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-111"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_exec_os_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_rust_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_target_os_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"crate"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"crate_root"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"edition"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"features"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"flagged_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"framework"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"incremental_build_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"incremental_enabled"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"mapped_srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"named_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_flagged_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_rustc_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"rpath"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"rustc_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"rustdoc_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"version_universe"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"rust_library"},"rust_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def rust_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _cxx_toolchain: default_only = None,\n  _exec_os_type: default_only = None,\n  _omnibus_environment: [None, str.type] = None,\n  _rust_toolchain: default_only = None,\n  _target_os_type: default_only = None,\n  contacts: [str.type] = None,\n  crate: [None, str.type] = None,\n  crate_root: [None, str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  default_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  doc_deps: [str.type] = None,\n  doc_env: {str.type: str.type} = None,\n  doc_linker_flags: [str.type] = None,\n  doc_named_deps: {str.type: str.type} = None,\n  doc_platform_deps: [(str.type, [str.type])] = None,\n  doc_platform_linker_flags: [(str.type, [str.type])] = None,\n  doctests: bool.type = None,\n  edition: [None, str.type] = None,\n  env: {str.type: str.type} = None,\n  features: [str.type] = None,\n  flagged_deps: [(str.type, [str.type])] = None,\n  incremental_build_mode: [None, str.type] = None,\n  incremental_enabled: bool.type = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  linker_flags: [str.type] = None,\n  mapped_srcs: {str.type: str.type} = None,\n  named_deps: {str.type: str.type} = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  platform_flagged_deps: [(str.type, [(str.type, [str.type])])] = None,\n  platform_rustc_flags: {str.type: [str.type]} = None,\n  preferred_linkage: str.type = None,\n  proc_macro: bool.type = None,\n  resources: [{str.type: [str.type, str.type]}, [[str.type, str.type]]] = None,\n  rustc_flags: [str.type] = None,\n  rustdoc_flags: [str.type] = None,\n  srcs: [str.type] = None,\n  supports_python_dlopen: [None, bool.type] = None,\n  version_universe: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-112"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_exec_os_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_omnibus_environment"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_rust_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_target_os_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"crate"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"crate_root"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"doc_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"doc_env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"doc_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"doc_named_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"doc_platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"doc_platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"doctests"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"edition"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"features"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"flagged_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"incremental_build_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"incremental_enabled"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"mapped_srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"named_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_flagged_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_rustc_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preferred_linkage"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"proc_macro"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"rustc_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"rustdoc_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"supports_python_dlopen"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"version_universe"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"rust_test"},"rust_test"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def rust_test(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _cxx_toolchain: default_only = None,\n  _exec_os_type: default_only = None,\n  _inject_test_env: default_only = None,\n  _rust_toolchain: default_only = None,\n  _target_os_type: default_only = None,\n  contacts: [str.type] = None,\n  crate: [None, str.type] = None,\n  crate_root: [None, str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  default_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  edition: [None, str.type] = None,\n  env: {str.type: str.type} = None,\n  features: [str.type] = None,\n  flagged_deps: [(str.type, [str.type])] = None,\n  framework: bool.type = None,\n  incremental_build_mode: [None, str.type] = None,\n  incremental_enabled: bool.type = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  link_style: [None, str.type] = None,\n  linker_flags: [str.type] = None,\n  mapped_srcs: {str.type: str.type} = None,\n  named_deps: {str.type: str.type} = None,\n  platform_deps: [(str.type, [str.type])] = None,\n  platform_flagged_deps: [(str.type, [(str.type, [str.type])])] = None,\n  platform_linker_flags: [(str.type, [str.type])] = None,\n  platform_rustc_flags: {str.type: [str.type]} = None,\n  remote_execution: [None, {str.type: str.type}] = None,\n  resources: [{str.type: [str.type, str.type]}, [[str.type, str.type]]] = None,\n  rpath: bool.type = None,\n  rustc_flags: [str.type] = None,\n  rustdoc_flags: [str.type] = None,\n  srcs: [str.type] = None,\n  version_universe: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-113"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_cxx_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_exec_os_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_inject_test_env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_rust_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_target_os_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"crate"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"crate_root"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"edition"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"features"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"flagged_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"framework"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"incremental_build_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"incremental_enabled"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"link_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"mapped_srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"named_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_flagged_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_linker_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_rustc_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"remote_execution"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"rpath"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"rustc_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"rustdoc_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"version_universe"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"scala_library"},"scala_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def scala_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  abi_generation_mode: [None, str.type] = None,\n  annotation_processor_deps: [str.type] = None,\n  annotation_processor_params: [str.type] = None,\n  annotation_processors: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  exported_deps: [str.type] = None,\n  exported_provided_deps: [str.type] = None,\n  extra_arguments: [str.type] = None,\n  java_version: [None, str.type] = None,\n  javac: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  manifest_file: [None, str.type] = None,\n  maven_coords: [None, str.type] = None,\n  never_mark_as_unused_dependency: [None, bool.type] = None,\n  on_unused_dependencies: [None, str.type] = None,\n  plugins: [str.type] = None,\n  proguard_config: [None, str.type] = None,\n  provided_deps: [str.type] = None,\n  remove_classes: [str.type] = None,\n  required_for_source_only_abi: bool.type = None,\n  resources: [str.type] = None,\n  resources_root: [None, str.type] = None,\n  runtime_deps: [str.type] = None,\n  source: [None, str.type] = None,\n  source_abi_verification_mode: [None, str.type] = None,\n  source_only_abi_deps: [str.type] = None,\n  srcs: [str.type] = None,\n  target: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-114"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"abi_generation_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_params"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processors"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_arguments"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"java_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"javac"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest_file"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"maven_coords"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"never_mark_as_unused_dependency"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"on_unused_dependencies"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"plugins"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"proguard_config"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"remove_classes"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"required_for_source_only_abi"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources_root"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"runtime_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_abi_verification_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_only_abi_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"scala_test"},"scala_test"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def scala_test(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  abi_generation_mode: [None, str.type] = None,\n  annotation_processor_deps: [str.type] = None,\n  annotation_processor_params: [str.type] = None,\n  annotation_processors: [str.type] = None,\n  contacts: [str.type] = None,\n  cxx_library_whitelist: [str.type] = None,\n  default_cxx_platform: [None, str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  deps_query: [None, str.type] = None,\n  env: {str.type: str.type} = None,\n  exported_deps: [str.type] = None,\n  exported_provided_deps: [str.type] = None,\n  extra_arguments: [str.type] = None,\n  fork_mode: str.type = None,\n  java_version: [None, str.type] = None,\n  javac: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  manifest_file: [None, str.type] = None,\n  maven_coords: [None, str.type] = None,\n  never_mark_as_unused_dependency: [None, bool.type] = None,\n  on_unused_dependencies: [None, str.type] = None,\n  plugins: [str.type] = None,\n  proguard_config: [None, str.type] = None,\n  provided_deps: [str.type] = None,\n  remove_classes: [str.type] = None,\n  required_for_source_only_abi: bool.type = None,\n  resources: [str.type] = None,\n  resources_root: [None, str.type] = None,\n  run_test_separately: bool.type = None,\n  runtime_deps: [str.type] = None,\n  source: [None, str.type] = None,\n  source_abi_verification_mode: [None, str.type] = None,\n  source_only_abi_deps: [str.type] = None,\n  srcs: [str.type] = None,\n  std_err_log_level: [None, [str.type, int.type]] = None,\n  std_out_log_level: [None, [str.type, int.type]] = None,\n  target: [None, str.type] = None,\n  test_case_timeout_ms: [None, int.type] = None,\n  test_rule_timeout_ms: [None, int.type] = None,\n  test_type: [None, str.type] = None,\n  use_cxx_libraries: [None, bool.type] = None,\n  use_dependency_order_classpath: [None, bool.type] = None,\n  vm_args: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-115"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"abi_generation_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processor_params"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"annotation_processors"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cxx_library_whitelist"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_cxx_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps_query"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exported_provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_arguments"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"fork_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"java_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"javac"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"manifest_file"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"maven_coords"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"never_mark_as_unused_dependency"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"on_unused_dependencies"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"plugins"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"proguard_config"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"provided_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"remove_classes"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"required_for_source_only_abi"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources_root"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"run_test_separately"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"runtime_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_abi_verification_mode"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"source_only_abi_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"std_err_log_level"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"std_out_log_level"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_case_timeout_ms"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_rule_timeout_ms"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"use_cxx_libraries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"use_dependency_order_classpath"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"vm_args"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"scene_kit_assets"},"scene_kit_assets"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def scene_kit_assets(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  path: str.type,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-116"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"path"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"select"},"select"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def select(d: "") -> "selector"\n')),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"select_equal_internal"},"select_equal_internal"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def select_equal_internal(left: "", right: "") -> bool.type\n')),(0,d.mdx)("p",null,"Tests that two selects are equal to each other. For testing use only."),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"select_map"},"select_map"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def select_map(d: "", func: "") -> ""\n')),(0,d.mdx)("p",null,"Applies a mapping function to a selector. See ","[StarlarkSelector::select_map]","."),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"select_test"},"select_test"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def select_test(d: "", func: "") -> bool.type\n')),(0,d.mdx)("p",null,"Applies a test function to a selector. See ","[StarlarkSelector::select_test]","."),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"sh_binary"},"sh_binary"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def sh_binary(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _target_os_type: default_only = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  main: str.type,\n  resources: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-117"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_target_os_type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"main"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"sh_test"},"sh_test"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def sh_test(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _inject_test_env: default_only = None,\n  args: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  env: {str.type: str.type} = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  list_args: [None, [str.type]] = None,\n  list_env: [None, {str.type: str.type}] = None,\n  resources: [str.type] = None,\n  run_args: [str.type] = None,\n  run_env: {str.type: str.type} = None,\n  run_test_separately: bool.type = None,\n  test: [None, [str.type, str.type]] = None,\n  test_rule_timeout_ms: [None, int.type] = None,\n  type: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-118"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_inject_test_env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"args"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"list_args"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"list_env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resources"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"run_args"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"run_env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"run_test_separately"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_rule_timeout_ms"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"type"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"sha256"},"sha256"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def sha256(val: str.type) -> str.type\n")),(0,d.mdx)("p",null,"Computes a sha256 digest for a string. Returns the hex representation of the digest."),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"struct"},"struct"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def struct(*args: UNKNOWN, **kwargs: UNKNOWN) -> "struct"\n')),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"supermodule_target_graph"},"supermodule_target_graph"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def supermodule_target_graph(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  label_pattern: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  on_duplicate_entry: str.type = None,\n  out: str.type = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-119"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"label_pattern"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"on_duplicate_entry"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"out"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"swift_library"},"swift_library"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def swift_library(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  bridging_header: [None, str.type] = None,\n  compiler_flags: [str.type] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  deps: [str.type] = None,\n  enable_cxx_interop: bool.type = None,\n  frameworks: [str.type] = None,\n  labels: [str.type] = None,\n  libraries: [str.type] = None,\n  licenses: [str.type] = None,\n  module_name: [None, str.type] = None,\n  preferred_linkage: str.type = None,\n  sdk_modules: [str.type] = None,\n  serialize_debugging_options: bool.type = None,\n  soname: [None, str.type] = None,\n  srcs: [str.type] = None,\n  supported_platforms_regex: [None, str.type] = None,\n  target_sdk_version: [None, str.type] = None,\n  uses_explicit_modules: bool.type = None,\n  version: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-120"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"bridging_header"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compiler_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"enable_cxx_interop"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"frameworks"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"libraries"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"module_name"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"preferred_linkage"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"sdk_modules"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"serialize_debugging_options"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"soname"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"supported_platforms_regex"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_sdk_version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"uses_explicit_modules"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"version"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"swift_toolchain"},"swift_toolchain"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def swift_toolchain(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _internal_platform_path: [None, str.type] = None,\n  _internal_sdk_path: [None, str.type] = None,\n  _swiftc_wrapper: str.type = None,\n  architecture: [None, str.type] = None,\n  can_toolchain_emit_obj_c_header_textually: bool.type = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  explicit_modules_uses_gmodules: bool.type = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  platform_path: [None, str.type] = None,\n  prefix_serialized_debug_info: bool.type = None,\n  resource_dir: [None, str.type] = None,\n  runtime_paths_for_bundling: [str.type] = None,\n  runtime_paths_for_linking: [str.type] = None,\n  runtime_run_paths: [str.type] = None,\n  sdk_dependencies_path: [None, str.type] = None,\n  sdk_modules: [str.type] = None,\n  sdk_path: [None, str.type] = None,\n  static_runtime_paths: [str.type] = None,\n  swift_stdlib_tool: str.type,\n  swift_stdlib_tool_flags: [str.type] = None,\n  swiftc: str.type,\n  swiftc_flags: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-121"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_internal_platform_path"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_internal_sdk_path"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_swiftc_wrapper"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"architecture"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"can_toolchain_emit_obj_c_header_textually"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"explicit_modules_uses_gmodules"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"platform_path"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"prefix_serialized_debug_info"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"resource_dir"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"runtime_paths_for_bundling"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"runtime_paths_for_linking"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"runtime_run_paths"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"sdk_dependencies_path"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"sdk_modules"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"sdk_path"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"static_runtime_paths"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"swift_stdlib_tool"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"swift_stdlib_tool_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"swiftc"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"swiftc_flags"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"test_suite"},"test_suite"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def test_suite(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  test_deps: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-122"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"test_deps"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"transition"},"transition"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def transition(*, impl: "", refs: {str.type: str.type}, attrs: [None, [str.type]] = None, split: bool.type = None) -> "transition"\n')),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"transitive_set"},"transitive_set"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def transitive_set(args_projections: [None, {str.type: ""}] = None, json_projections: [None, {str.type: ""}] = None, reductions: [None, {str.type: ""}] = None) -> "transitive_set_definition"\n')),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"versioned_alias"},"versioned_alias"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def versioned_alias(versions: UNKNOWN = {}, **kwargs: UNKNOWN) -> UNKNOWN\n")),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"warning"},"warning"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def warning(x: str.type) -> None\n")),(0,d.mdx)("p",null,"Produce a warning."),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"worker_tool"},"worker_tool"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def worker_tool(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _worker_tool_runner: default_only = None,\n  args: [str.type, [str.type]] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  env: {str.type: str.type} = None,\n  exe: [None, str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  max_workers: [None, int.type] = None,\n  max_workers_per_thread_percent: [None, int.type] = None,\n  persistent: [None, bool.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-123"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_worker_tool_runner"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"args"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"env"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exe"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"max_workers"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"max_workers_per_thread_percent"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"persistent"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"write_package_value"},"write_package_value"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},'def write_package_value(key: str.type, value: "", *, overwrite: bool.type = None) -> None\n')),(0,d.mdx)("p",null,"Set the value to be accessible in the nested ",(0,d.mdx)("inlineCode",{parentName:"p"},"PACKAGE")," files."),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"xcode_postbuild_script"},"xcode_postbuild_script"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def xcode_postbuild_script(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  cmd: str.type = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  input_file_lists: [str.type] = None,\n  inputs: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  output_file_lists: [str.type] = None,\n  outputs: [str.type] = None,\n  srcs: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-124"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cmd"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"input_file_lists"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"inputs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"output_file_lists"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"outputs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"xcode_prebuild_script"},"xcode_prebuild_script"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def xcode_prebuild_script(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  cmd: str.type = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  input_file_lists: [str.type] = None,\n  inputs: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  output_file_lists: [str.type] = None,\n  outputs: [str.type] = None,\n  srcs: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-125"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"cmd"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"input_file_lists"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"inputs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"output_file_lists"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"outputs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"xcode_workspace_config"},"xcode_workspace_config"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def xcode_workspace_config(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  action_config_names: {str.type: str.type} = None,\n  additional_scheme_actions: [None, {str.type: {str.type: [str.type]}}] = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  environment_variables: [None, {str.type: {str.type: str.type}}] = None,\n  explicit_runnable_path: [None, str.type] = None,\n  extra_schemes: {str.type: str.type} = None,\n  extra_shallow_targets: [str.type] = None,\n  extra_targets: [str.type] = None,\n  extra_tests: [str.type] = None,\n  is_remote_runnable: [None, bool.type] = None,\n  labels: [str.type] = None,\n  launch_style: [None, str.type] = None,\n  licenses: [str.type] = None,\n  notification_payload_file: [None, str.type] = None,\n  src_target: [None, str.type] = None,\n  was_created_for_app_extension: [None, bool.type] = None,\n  watch_interface: [None, str.type] = None,\n  within_view: [None, [None, [str.type]]] = None,\n  workspace_name: [None, str.type] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-126"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"action_config_names"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"additional_scheme_actions"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"environment_variables"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"explicit_runnable_path"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_schemes"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_shallow_targets"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_targets"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"extra_tests"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"is_remote_runnable"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"launch_style"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"notification_payload_file"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"src_target"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"was_created_for_app_extension"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"watch_interface"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"workspace_name"))),(0,d.mdx)("td",null)))),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"zip_file"},"zip_file"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-python"},"def zip_file(\n    *,\n  name: str.type,\n  default_target_platform: [None, str.type] = None,\n  target_compatible_with: [str.type] = None,\n  compatible_with: [str.type] = None,\n  exec_compatible_with: [str.type] = None,\n  visibility: [str.type] = None,\n  tests: [label] = None,\n  _zip_file_toolchain: default_only = None,\n  contacts: [str.type] = None,\n  default_host_platform: [None, str.type] = None,\n  entries_to_exclude: [str.type] = None,\n  labels: [str.type] = None,\n  licenses: [str.type] = None,\n  on_duplicate_entry: str.type = None,\n  out: str.type = None,\n  srcs: [str.type] = None,\n  within_view: [None, [None, [str.type]]] = None,\n  zip_srcs: [str.type] = None\n) -> None\n")),(0,d.mdx)("h3",{id:"parameters-127"},"Parameters"),(0,d.mdx)("table",{class:"starlark_table starlark_parameters_table"},(0,d.mdx)("thead",null,(0,d.mdx)("tr",null,(0,d.mdx)("th",null,"Name"),(0,d.mdx)("th",null,"Details"))),(0,d.mdx)("tbody",null,(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"name"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"name of the target"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_target_platform"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"specifies the default target platform, used when no platforms are specified on the command line"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"target_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"exec_compatible_with"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"visibility"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of visibility patterns restricting what targets can depend on this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"tests"))),(0,d.mdx)("td",null,(0,d.mdx)("p",null,"a list of targets that provide tests for this one"))),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"_zip_file_toolchain"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"contacts"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"default_host_platform"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"entries_to_exclude"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"labels"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"licenses"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"on_duplicate_entry"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"out"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"srcs"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"within_view"))),(0,d.mdx)("td",null)),(0,d.mdx)("tr",null,(0,d.mdx)("td",null,(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"zip_srcs"))),(0,d.mdx)("td",null)))))}o.isMDXComponent=!0}}]);
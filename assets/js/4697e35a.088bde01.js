"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6483],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>d,MDXProvider:()=>p,mdx:()=>g,useMDXComponents:()=>c,withMDXComponents:()=>u});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o.apply(this,arguments)}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),u=function(e){return function(t){var n=c(t.components);return r.createElement(e,o({},t,{components:n}))}},c=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},m="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},v=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),p=a,m=u["".concat(l,".").concat(p)]||u[p]||f[p]||o;return n?r.createElement(m,i(i({ref:t},d),{},{components:n})):r.createElement(m,i({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=v;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:a,l[1]=i;for(var d=2;d<o;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}v.displayName="MDXCreateElement"},54770:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var r=n(87462),a=(n(67294),n(3905));const o={},l="ConstraintValueInfo",i={unversionedId:"generated/native/providers/ConstraintValueInfo",id:"generated/native/providers/ConstraintValueInfo",title:"ConstraintValueInfo",description:"Provider that signals that a target can be used as a constraint key. This is the only provider returned by a constraint_value() target.",source:"@site/../docs/generated/native/providers/ConstraintValueInfo.md",sourceDirName:"generated/native/providers",slug:"/generated/native/providers/ConstraintValueInfo",permalink:"/docs/generated/native/providers/ConstraintValueInfo",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"manualSidebar",previous:{title:"ConstraintSettingInfo",permalink:"/docs/generated/native/providers/ConstraintSettingInfo"},next:{title:"DefaultInfo",permalink:"/docs/generated/native/providers/DefaultInfo"}},s={},d=[{value:"Members",id:"members",level:3},{value:"label : <code>&quot;target_label&quot;</code>",id:"label--target_label",level:2},{value:"setting : <code>&quot;ConstraintSettingInfo&quot;</code>",id:"setting--constraintsettinginfo",level:2}],u={toc:d};function c(e){let{components:t,...n}=e;return(0,a.mdx)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"constraintvalueinfo"},"ConstraintValueInfo"),(0,a.mdx)("p",null,"Provider that signals that a target can be used as a constraint key. This is the only provider returned by a ",(0,a.mdx)("inlineCode",{parentName:"p"},"constraint_value()")," target."),(0,a.mdx)("h3",{id:"members"},"Members"),(0,a.mdx)("table",{class:"starlark_table starlark_members_table"},(0,a.mdx)("thead",null,(0,a.mdx)("tr",null,(0,a.mdx)("th",null,"Member"),(0,a.mdx)("th",null,"Description"),(0,a.mdx)("th",null,"Type"))),(0,a.mdx)("tbody",null,(0,a.mdx)("tr",null,(0,a.mdx)("td",null,(0,a.mdx)("p",null,"label")),(0,a.mdx)("td",null),(0,a.mdx)("td",null,(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'"target_label"\n')))),(0,a.mdx)("tr",null,(0,a.mdx)("td",null,(0,a.mdx)("p",null,"setting")),(0,a.mdx)("td",null),(0,a.mdx)("td",null,(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'"ConstraintSettingInfo"\n')))))),(0,a.mdx)("h2",{id:"label--target_label"},"label : ",(0,a.mdx)("inlineCode",{parentName:"h2"},'"target_label"')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"setting--constraintsettinginfo"},"setting : ",(0,a.mdx)("inlineCode",{parentName:"h2"},'"ConstraintSettingInfo"')))}c.isMDXComponent=!0}}]);